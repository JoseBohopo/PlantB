{"version":3,"sources":["components/layout/Searchbar/Searchbar.js","components/layout/Navigation/NotLoggedUser/NotLoggedUser.js","services/plant.service.js","services/auth.service.js","components/layout/Navigation/LoggedUser/LoggedUser.js","components/layout/Navigation/DropdownItem/Dropdownitem.js","logo.svg","components/layout/Navigation/Navigation.js","homepage_plant.png","about_us_image.png","components/pages/Footer/Footer.js","components/pages/Home/Home.js","components/pages/Login/Login.js","services/upload.service.js","components/pages/Signup/Signup.js","components/pages/Profile/Profile.js","components/pages/PlantForm/PlantForm.js","services/comment.service.js","components/pages/CommentForm/CommentForm.js","components/pages/PlantDetails/RemoveItem/RemoveItem.js","components/pages/PlantDetails/Editplant/Editplant.js","services/message.service.js","services/user.service.js","components/pages/SendMessage/SendMessage.js","components/pages/PlantDetails/MessageForm/MessageForm.js","components/pages/PlantDetails/PlantDetails.js","services/cart.service.js","components/pages/PlantsList/PlantsList.js","components/pages/CartItem/CartItem.js","components/pages/Cart/Cart.js","components/pages/messages/MessageList/MessageList.js","components/routes/index.js","App.js","reportWebVitals.js","index.js","utils/index.js"],"names":["Searchbar","props","useState","searchValue","setSearchValue","displayPlants","changeToggle","toggle","clearState","FormControl","className","type","placeholder","value","onChange","e","target","setTimeout","handleChange","NotLoggedUser","Nav","Link","as","to","NavDropdown","Divider","PlantService","getPlants","instance","get","getPlant","id","createPlant","plant","post","deletePlant","delete","editPlant","put","this","axios","create","baseURL","process","withCredentials","AuthService","signup","username","password","email","address","age","role","avatar","login","logout","isloggedin","LoggedUser","authService","then","storeUser","catch","err","console","log","title","Navbar","Text","href","loggedUser","alt","src","Item","_id","onClick","DropdownItem","Dropdown","image","name","price","Navigation","plants","setPlants","plantsList","setPlantsList","setToggle","searching","setSearching","useEffect","res","data","length","collapseOnSelect","expand","variant","Container","Brand","logoImg","Toggle","Collapse","autoclose","show","onBlur","onToggle","isOpen","metadata","filteredPlants","filter","toLowerCase","includes","Menu","map","Footer","bgColor","network","url","Home","Row","Col","xs","md","lg","homepage_image","about_image","Login","setUsername","setPassword","error","setErrorLogin","handleInput","sm","Form","onSubmit","preventDefault","history","push","response","message","undefined","Group","controlId","Label","Control","Button","UploadService","uploadImg","imageForm","formatSignDate","require","uploadService","Signup","setEmail","setAddress","setAge","setRole","setAvatar","isLoading","setIsLoading","uploadData","FormData","append","files","cloudinary_url","alert","handleFile","tmp","user","apiKey","language","options","types","fields","componentRestrictions","country","max","Check","inline","label","defaultChecked","Spinner","animation","disabled","Profile","plantService","PlantForm","setName","setImage","size","setSize","setType","toxic","setToxic","location","setLocation","temperature","setTemperature","watering","setWatering","setPrice","setError","newValue","checked","splice","indexOf","description","sellerId","animtion","CommentService","getComments","getComment","deleteComment","createComment","comment","commentService","CommentForm","content","setContent","rating","setRating","hover","setHover","authorId","Array","star","idx","ratingValue","color","onMouseEnter","onMouseLeave","RemoveItem","removePlant","EditPlant","match","params","findPlant","MessageService","getMessages","getMessage","createMessage","deleteMessage","UserService","getUsers","getUser","editUser","createUser","deleteUSer","messageService","SendMessage","seller","subject","setSubject","plantSellerId","setPlantSellerId","getOneUser","receiverId","MessageForm","showForm","setShowForm","closeModal","block","Modal","onHide","Header","closeButton","Title","Body","PlantDetails","formatDate","plantsDetails","setPlantsDetails","setUser","getOnePlant","Card","style","width","Img","ListGroup","ListGroupItem","sellerDetails","CartService","getCart","createCart","cart","editCart","PlantsList","cartService","items","addToCart","CartItem","Cart","MessageList","setMessage","messages","el","createdAt","Routes","exact","path","render","App","setLoggedUser","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById","module","exports","date","dateF","Date","month","getMonth","day","getDate","year","getFullYear","join","today"],"mappings":"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","file":"static/js/main.f8a7ce5e.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { FormControl } from \"react-bootstrap\";\nimport \"./Searchbar.css\"\n\nconst Searchbar = (props) => {\n  const [searchValue, setSearchValue] = useState(\"\");\n  const { displayPlants } = props;\n  const { changeToggle } = props\n  let { toggle } = props\n\n  const handleChange = (e) => {\n    const { value } = e.target;\n    setSearchValue(value);\n    displayPlants(value);\n    setTimeout(() => {\n      clearState(searchValue);\n      changeToggle(toggle)\n    }, 5000);\n    \n  };\n  const clearState = (searchValue) => {\n\n    setSearchValue(\"\")\n  } \n\n  return (\n    <>\n      <FormControl\n        className=\"searchbar__input rounded-pill\"\n        type=\"search\"\n        placeholder=\"Search for a plant\"\n        aria-label=\"Search\"\n        value={searchValue}\n        onChange={(e) => handleChange(e)}\n      />\n    </>\n  );\n};\n\nexport default Searchbar;\n","import { Nav, NavDropdown } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\n//Style in LoggedUser.css\n\n const NotLoggedUser = () => {\n\n    return (\n      <>\n        <Nav.Link className=\"navbar__large navbar__large__text\" as={Link} to=\"/login\">\n          Sign in\n        </Nav.Link>\n\n        <div className=\"navbar__collapsed\">\n          <NavDropdown.Divider />\n          <Nav.Link className=\"navbar__collapsed__text\" as={Link} to=\"/login\">\n            Sign in\n          </Nav.Link>\n        </div>\n      </>\n    );\n}\n\nexport default NotLoggedUser","import axios from \"axios\";\n\nclass PlantService {\n  constructor() {\n    this.instance = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/plant`,\n      withCredentials: true\n    });\n  }\n\n  getPlants = () => this.instance.get(\"/\");\n  getPlant = (id) => this.instance.get(`/${id}`);\n  createPlant = (plant) => this.instance.post(\"/\", plant);\n  deletePlant = (id) => this.instance.delete(`/${id}`);\n  editPlant = (id, plant) => this.instance.put(`/${id}`, plant);\n}\n\nexport default PlantService;","import axios from \"axios\";\n\nclass AuthService {\n  constructor() {\n    this.instance = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/auth`,\n      withCredentials: true,\n    });\n  }\n\n  signup = (\n    username,\n    password,\n    email,\n    address,\n    age,\n    role,\n    avatar = \"\"\n  ) =>\n    this.instance.post(\"/signup\", {\n      username,\n      password,\n      email,\n      address,\n      age,\n      role,\n      avatar\n    });\n  login = (username, password) =>\n    this.instance.post(\"/login\", { username, password });\n  logout = () => this.instance.get(\"/logout\");\n  isloggedin = () => this.instance.post(\"/isloggedin\");\n}\n\nexport default AuthService;\n","import { Link } from \"react-router-dom\";\nimport { Nav, Navbar, NavDropdown } from \"react-bootstrap\";\nimport AuthService from \"../../../../services/auth.service\";\nimport \"./LoggedUser.css\"\n\nconst LoggedUser = (props) => {\n\n  const authService = new AuthService();\n\n  const logout = () => {\n    authService\n        .logout()\n        .then(() => props.storeUser(null))\n        .catch((err) => console.log(err));\n  };\n\n  return (\n    <>\n      <NavDropdown\n        className=\"navbar__large\"\n        title={\n          <Navbar.Text>\n            Welcome,\n            <a href=\"#/\"> {props.loggedUser.username} </a>\n            <img\n              alt=\"user avatar\"\n              className=\"navbar__avatar rounded-circle\"\n              src={props.loggedUser.avatar}\n            />\n          </Navbar.Text>\n        }\n        id=\"collasible-nav-dropdown\"\n      >\n        <NavDropdown.Item as={Link} to={`/${props.loggedUser.username}`}>\n          My profile\n        </NavDropdown.Item>\n        <NavDropdown.Item\n          as={Link}\n          to={`/message-list/${props.loggedUser._id}`}\n        >\n          Messages\n        </NavDropdown.Item>\n        <NavDropdown.Item as={Link} to=\"/new-plant\">\n          Add a plant\n        </NavDropdown.Item>\n        <NavDropdown.Item as={Link} to=\"/new-comment\">\n          Add a comment\n        </NavDropdown.Item>\n        <NavDropdown.Divider />\n        <NavDropdown.Item as={Link} to=\"/\" onClick={logout}>\n          Logout\n        </NavDropdown.Item>\n      </NavDropdown>\n\n      <div className=\"navbar__collapsed\">\n        <NavDropdown.Divider /> \n        <Nav.Link className=\"navbar__collapsed__text\" as={Link} to={`/${props.loggedUser.username}`}>My profile</Nav.Link>\n        <NavDropdown.Divider />\n        <Nav.Link className=\"navbar__collapsed__text\" as={Link} to={`/message-list/${props.loggedUser._id}`}>Messages</Nav.Link>\n        <NavDropdown.Divider />\n        <Nav.Link className=\"navbar__collapsed__text\" as={Link} to=\"/new-plant\">Sell a plant</Nav.Link>\n        <NavDropdown.Divider />\n        <Nav.Link className=\"navbar__collapsed__text\" as={Link} to=\"/\" onClick={logout}>Logout</Nav.Link>\n      </div>\n    </>\n  );\n\n}\n\nexport default LoggedUser","import { Dropdown } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport \"./Dropdownitem.css\";\n\nconst DropdownItem = ({ plant }) => {\n  return plant ? (\n    <Dropdown.Item as={Link} to={`/plant/${plant._id}`}>\n      <div className=\"row\">\n        <div className=\"col-3\">\n          <img src={plant.image} alt={plant.name} />\n        </div>\n        <div className=\"col-7\">\n          <p>{plant.name}</p>\n        </div>\n        <div className=\"col-2\">\n          <p>€{plant.price}</p>\n        </div>\n      </div>\n    </Dropdown.Item>\n  ) : (\n    <p>Loading......</p>\n  );\n};\n\nexport default DropdownItem;\n","export default __webpack_public_path__ + \"static/media/logo.88e3a3cb.svg\";","import \"./navigation.css\";\nimport { Link } from \"react-router-dom\";\nimport Searchbar from \"../Searchbar/Searchbar\";\nimport React, { useState, useEffect } from \"react\";\nimport NotLoggedUser from \"./NotLoggedUser/NotLoggedUser\";\nimport PlantService from \"../../../services/plant.service\";\nimport LoggedUser from \"./LoggedUser/LoggedUser\";\nimport DropdownItem from \"./DropdownItem/Dropdownitem\";\nimport { Container, Dropdown, Nav, Navbar } from \"react-bootstrap\";\nimport logoImg from \"../../../logo.svg\";\n\nconst Navigation = (props) => {\n  const [plants, setPlants] = useState([]);\n  const [plantsList, setPlantsList] = useState([]);\n\n  const [toggle, setToggle] = useState(false);\n  const [searching, setSearching] = useState(false);\n\n  useEffect(() => {\n    const plantService = new PlantService();\n    plantService.getPlants().then((res) => setPlantsList(res.data));\n  }, []);\n\n  useEffect(() => {\n    if (!searching || plants.length === 0) setToggle(false);\n    else setToggle(true);\n  }, [plants, searching]);\n\n  const displayPlants = (searchValue) => {\n    if (searchValue && searchValue.length > 0) setSearching(true);\n    else setSearching(false);\n\n    const filteredPlants = plantsList.filter((plant) =>\n      plant.name.toLowerCase().includes(searchValue.toLowerCase())\n    );\n  \n    setPlants(filteredPlants);\n  };\n\n  const changeToggle = (toggle) => {\n\n    toggle && setToggle(false)\n  }\n    \n\n  return (\n    <Navbar\n      className=\"navbar fixed-top\"\n      collapseOnSelect\n      expand=\"lg\"\n      variant=\"dark\"\n    >\n      <Container>\n        <Navbar.Brand className=\"navbar__logo\" as={Link} to=\"/\">\n          <img alt=\"logo\" src={logoImg} /> Plant B\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"m-auto\">\n            <Dropdown\n              className=\"d-inline mx-2 \"\n              autoclose=\"inside\"\n              show={toggle}\n              onBlur={e => e.target.value = \"\" }\n              onToggle={(isOpen, e, metadata) => {\n                if (plants.length === 0) setToggle(false);\n                else if (isOpen) setToggle(isOpen);\n                else if (e.target.type !== \"button\") setToggle(isOpen);\n              }}\n            >\n              <Dropdown.Toggle\n                className=\"navbar__toggle\"\n                id=\"dropdown-autoclose-inside\"\n              >\n                <Searchbar toggle={toggle} changeToggle={changeToggle} displayPlants={displayPlants} />\n              </Dropdown.Toggle>\n              <Dropdown.Menu className=\"dropdown__menu\">\n                {plants.length > 0 &&\n                  plants.map((plant) => (\n                    <Link to={`/plant/${plant._id}`}>\n                      <DropdownItem key={plant._id} plant={plant} />\n                    </Link>\n                  ))}\n              </Dropdown.Menu>\n            </Dropdown>\n          </Nav>\n          <Nav>\n            {props.loggedUser ? <LoggedUser {...props} /> : <NotLoggedUser />}\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n};\n\nexport default Navigation;\n","export default __webpack_public_path__ + \"static/media/homepage_plant.174b6a00.png\";","export default __webpack_public_path__ + \"static/media/about_us_image.d34c4d2c.png\";","import \"./Footer.css\";\nimport { SocialIcon } from \"react-social-icons\";\n\nconst Footer = () => {\n  return (\n    <footer className=\"mt-5 d-flex justify-content-center\">\n      <SocialIcon\n        bgColor=\"white\"\n        className=\"m-2\"\n        target=\"_blank\"\n        network=\"twitter\"\n        url=\"https://github.com/alberto-massa/PlantB\"\n      />\n      <SocialIcon\n        bgColor=\"white\"\n        className=\"m-2\"\n        target=\"_blank\"\n        network=\"facebook\"\n        url=\"https://github.com/alberto-massa/PlantB\"\n      />\n      <SocialIcon\n        bgColor=\"white\"\n        className=\"m-2\"\n        target=\"_blank\"\n        network=\"instagram\"\n        url=\"https://github.com/alberto-massa/PlantB\"\n      />\n    </footer>\n  );\n};\n\nexport default Footer;\n","import { Row, Col, Container } from \"react-bootstrap\"\nimport { Link } from \"react-router-dom\";\nimport homepage_image from \"./../../../homepage_plant.png\"\nimport about_image from \"./../../../about_us_image.png\";\nimport \"./Home.css\"\nimport Footer from \"./../../pages/Footer/Footer\"\n\nconst Home = () => {\n\n\n    return (\n      <>\n        <Container className=\"homepage mt-5 mb-5\">\n          <Row className=\"homepage__row justify-content-center align-items-center\">\n            <Col xs={false} md={false} lg={1} />\n            <Col className=\"homepage__col__text\" xs={12} md={12} lg={5}>\n              <h1>Plant B</h1>\n              <h3>Your favorite plant's shop in your neighborhood 🌱</h3>\n              <p>\n                Plants reduce stress levels and boost your mood - making them\n                perfect for your home and your work space, too.\n              </p>\n              <Link to={\"/plants\"}>\n                <button className=\"homepage__btn\">Check the latest plants</button>\n              </Link>\n            </Col>\n            <Col xs={12} md={12} lg={5}>\n              <img alt=\"plant\" src={homepage_image} />\n            </Col>\n            <Col xs={false} md={false} lg={1} />\n          </Row>\n        </Container>\n\n        <br/>\n\n        <Container className=\"about mt-5\">\n          <Row className=\"justify-content-center align-items-center\">\n            <Col xs={false} md={false} lg={1} />\n            <Col xs={12} md={12} lg={5}>\n              <img className=\"rounded-circle\" alt=\"plant\" src={about_image} />\n            </Col>\n            <Col className=\"\" xs={12} md={12} lg={5}>\n              <h2>About us</h2>\n              <p>\n                <del>We are 2 junior web developers doing a project--</del> We\n                love plants, and we wanted to make them accessible to everyone, as easy as possible, so we created this community.\n              </p>\n            </Col>\n\n            <Col xs={false} md={false} lg={1} />\n          </Row>\n        </Container>\n\n        <Footer/>\n      </>\n    );\n}\n\nexport default Home\n","import React, { useState } from \"react\";\nimport { Container, Form, Button, Row, Col } from \"react-bootstrap\";\nimport AuthService from \"../../../services/auth.service\";\nimport { Link } from \"react-router-dom\";\nimport \"../../../App.css\";\n\nconst Login = (props) => {\n  const [username, setUsername] = useState(\"\")\n  const [password, setPassword] = useState(\"\");\n  const [error, setErrorLogin] = useState(\"\")\n\n\n  const authService = new AuthService();\n  \n  const handleInput = (e) => {\n    const { name, value } = e.target;\n    name === 'username' ? setUsername(value) : setPassword(value)\n  };\n  \n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n\n    authService\n      .login(username, password)\n      .then((res) => {\n        props.storeUser(res.data);\n        props.history.push(\"/\");\n      })\n      .catch((err) => {\n        setErrorLogin(err.response.data.message)\n        setTimeout(() => setErrorLogin(undefined),2500)\n      });\n  };\n\n  return (\n    <Container className=\"login\">\n      <Row className=\"mt-5 d-flex justify-content-center\">\n        <Col xs={8} sm={8} lg={6}>\n          <Form className=\"container\" onSubmit={handleFormSubmit}>\n            <Form.Group className=\"mb-3\" controlId=\"username\">\n              <Form.Label>Username</Form.Label>\n              <Form.Control\n                className=\"rounded-pill\"\n                name=\"username\"\n                value={username}\n                onChange={(e) => handleInput(e)}\n                type=\"text\"\n                placeholder=\"Enter username\"\n              />\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"password\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                className=\"rounded-pill\"\n                name=\"password\"\n                value={password}\n                onChange={(e) => handleInput(e)}\n                type=\"password\"\n                placeholder=\"Password\"\n              />\n            </Form.Group>\n            <div className=\"d-grid gap-2\">\n              <Button variant=\"success\" type=\"submit\" className=\"rounded-pill\">\n                Submit\n              </Button>\n            </div>\n          </Form>\n\n          {error && <p id=\"errorMessage\">{error}</p>}\n\n          <p className=\"text-center mt-4\">\n            Not registered? <Link to={\"/register\"}>Sign up</Link>\n          </p>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Login;\n","import axios from 'axios'\n\nclass UploadService {\n\n    constructor(){\n\n        this.instance = axios.create({\n            baseURL: `${process.env.REACT_APP_API_URL}/uploads`,\n\n        })\n    }\n    uploadImg = (imageForm) => this.instance.post(\"/image\", imageForm)\n}\n\nexport default UploadService;","import AuthService from \"./../../../services/auth.service\";\nimport React, { useState } from \"react\";\nimport { Container, Form, Button, Spinner, Row, Col } from \"react-bootstrap\";\nimport UploadService from \"./../../../services/upload.service\";\nimport \"./Signup.css\"\nimport Autocomplete from \"react-google-autocomplete\";\n\nconst { formatSignDate } = require(\"../../../utils/index\");\n\nconst authService = new AuthService();\nconst uploadService = new UploadService();\n\nconst Signup = (props) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [age, setAge] = useState(0);\n  const [role, setRole] = useState(\"\");\n  const [avatar, setAvatar] = useState(\n    \"https://res.cloudinary.com/dubhsyrde/image/upload/v1633536992/orl5czm2lgcz9a2fzkhu.svg\"\n  );\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setErrorLogin] = useState(\"\")\n\n\n  const clearState = () => {\n    setUsername(\"\");\n    setPassword(\"\");\n    setEmail(\"\");\n    setAddress(\"\");\n    setAge(0);\n    setRole(\"\");\n    setAvatar(\"\");\n  };\n\n  \n\n  const handleChange = (e) => {\n    let { value, name, type } = e.target;\n    type === \"radio\" && (value === \"true\" ? (value = true) : (value = false));\n\n    switch (name) {\n      case \"username\":\n        setUsername(value);\n        break;\n\n      case \"password\":\n        setPassword(value);\n        break;\n\n      case \"email\":\n        setEmail(value);\n        break;\n\n      case \"address\":\n        setAddress(value);\n        break;\n\n      case \"age\":\n        setAge(value);\n        break;\n\n      case \"role\":\n        setRole(value);\n        break;\n\n      case \"avatar\":\n        setAvatar(value);\n        break;\n\n      default:\n    }\n  };\n\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n\n    let tmp = \"\";\n    role ? (tmp = \"Shop\") : (tmp = \"User\");\n\n    authService\n      .signup(username, password, email, address, age, tmp, avatar)\n      .then((user) => {\n        props.storeUser(user.data.user);\n        console.log(user)\n        props.history.push(\"/\");\n      })\n      .catch((err) =>{\n        setErrorLogin(err.response.data.message)\n        setTimeout(() => setErrorLogin(undefined),2500)\n        console.log(err)\n      });\n\n    clearState();\n  };\n\n  const handleFile = (e) => {\n    setIsLoading(true);\n\n    const uploadData = new FormData();\n    uploadData.append(\"imageData\", e.target.files[0]);\n\n    uploadService\n      .uploadImg(uploadData)\n      .then((res) => {\n        \n        setIsLoading(false);\n        setAvatar(res.data.cloudinary_url);\n      })\n      .catch((err) => alert(\"Error, image not uploaded\", err));\n  };\n\n  return (\n    <Container className=\"signup\">\n      <Row className=\"mt-3 d-flex justify-content-center\">\n        <Col xs={6} sm={8} lg={6}>\n          <Row>\n            <Form.Group className=\"mb-3 text-center\" controlId=\"avatar\">\n              <img className=\"signup__avatar rounded-circle\" alt=\"default avatar\" src={avatar} />\n              <Form.Label className=\"btn btn-outline-success rounded-pill\">\n                Change picture\n              </Form.Label>\n\n              <Form.Control\n                className=\"form-control-hide\"\n                name=\"avatar\"\n                onChange={(e) => handleFile(e)}\n                type=\"file\"\n              />\n            </Form.Group>\n          </Row>\n\n          <Form onSubmit={handleFormSubmit}>\n            <Form.Group className=\"mb-3\" controlId=\"username\">\n              <Form.Label>Username*</Form.Label>\n              <Form.Control\n                className=\"rounded-pill\"\n                name=\"username\"\n                value={username}\n                onChange={(e) => handleChange(e)}\n                type=\"text\"\n                placeholder=\"Enter username\"\n              />\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"password\">\n              <Form.Label>Password*</Form.Label>\n              <Form.Control\n                className=\"rounded-pill\"\n                name=\"password\"\n                value={password}\n                onChange={(e) => handleChange(e)}\n                type=\"password\"\n                placeholder=\"Password\"\n              />\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"email\">\n              <Form.Label>Email*</Form.Label>\n              <Form.Control\n                className=\"rounded-pill\"\n                name=\"email\"\n                value={email}\n                onChange={(e) => handleChange(e)}\n                type=\"email\"\n                placeholder=\"Email\"\n              />\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"address\">\n              <Form.Label>Address*</Form.Label>\n              <Autocomplete\n                className=\"form-control rounded-pill\"\n                apiKey={process.env.REACT_APP_API_KEY_MAPS}\n                language=\"en\"\n                options={{\n                  types: [\"address\"],\n                  fields: [\"(formatted_address)\"],\n                  componentRestrictions: { country: \"es\" },\n                }}\n                onChange={(e) => handleChange(e)\n                }\n              />\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"age\">\n              <Form.Label>Date of Birth*</Form.Label>\n              <Form.Control\n                className=\"rounded-pill\"\n                name=\"age\"\n                value={age}\n                max={formatSignDate()}\n                onChange={(e) => handleChange(e)}\n                type=\"date\"\n                placeholder=\"Age\"\n              />\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"role\">\n              <Form.Label>Are you a local store / company?</Form.Label>\n              <div key={`inline-radio`}>\n                <Form.Check\n                  inline\n                  label=\"Yes\"\n                  name=\"role\"\n                  type=\"radio\"\n                  id={`inline-radio-1`}\n                  value={true}\n                  onChange={(e) => handleChange(e)}\n                />\n                <Form.Check\n                  className=\"success\"\n                  defaultChecked\n                  inline\n                  label=\"No\"\n                  name=\"role\"\n                  type=\"radio\"\n                  id={`inline-radio-2`}\n                  value={false}\n                  onChange={(e) => handleChange(e)}\n                />\n              </div>\n            </Form.Group>\n\n            <Row className=\"justify-content-center mt-2 mb-2\">\n              {isLoading && <Spinner animation=\"border\" variant=\"success\" />}\n            </Row>\n\n            <div className=\"d-grid gap-2\">\n              <Button\n                className=\"rounded-pill\"\n                disabled={isLoading}\n                variant=\"success\"\n                type=\"submit\"\n              >\n                {isLoading ? \"Loading...\" : \"Submit\"}\n              </Button>\n            </div>\n          </Form>\n        </Col>\n      </Row>\n      {error && <p id=\"errorMessage\">{error}</p>}\n    </Container>\n  );\n};\n\nexport default Signup;\n","import { Col, Container, Row } from \"react-bootstrap\";\nimport \"./Profile.css\"\n\n\nconst Profile = ({ loggedUser }) => {\n\n  return (\n    <>\n      {loggedUser ? (\n        <Container className=\"profile\">\n          <Row className=\"d-flex justify-content-center\">\n            <Col className=\"profile__col\" xs={10} sm={8} lg={6}>\n              <h1 className=\"text-center\">{loggedUser.username}</h1>\n              <p className=\"text-center\">{loggedUser.role}</p>\n              <div className=\"text-center\">\n                <img\n                  className=\"rounded-circle center-block\"\n                  alt={`${loggedUser.username}'s avatar`}\n                  src={loggedUser.avatar}\n                />\n              </div>\n\n              <p >{loggedUser.email}</p>\n              <p className=\"text-center\">{loggedUser.address}</p>\n            </Col>\n          </Row>\n        </Container>\n      ) : (\n        <p>Loading...</p>\n      )}\n    </>\n  );\n};\n\nexport default Profile;\n","import React, { useState } from \"react\";\nimport { Button, Form, Spinner } from \"react-bootstrap\";\nimport PlantService from \"../../../services/plant.service\";\nimport UploadService from \"../../../services/upload.service\";\nimport \"../../../App.css\"\n\nconst plantService = new PlantService();\nconst uploadService = new UploadService();\n\nconst PlantForm = (props) => {\n  const [name, setName] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [size, setSize] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [toxic, setToxic] = useState(false);\n  const [location, setLocation] = useState([]);\n  const [temperature, setTemperature] = useState(0);\n  const [watering, setWatering] = useState(\"\");\n  const [price, setPrice] = useState(0);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(\"\")\n\n\n  const clearState = () => {\n    setName(\"\");\n    setImage(\"\");\n    setSize(\"\");\n    setType(\"\");\n    setToxic(false);\n    setLocation([]);\n    setTemperature(0);\n    setWatering(\"\");\n    setPrice(0);\n  };\n\n  const handleChange = (e) => {\n    let { value, name, type } = e.target;\n\n    let newValue = [...location];\n    if (name === \"location\" && e.target.checked) {\n      newValue.push(value);\n    }\n    if (name === \"location\" && !e.target.checked) {\n      newValue.splice(newValue.indexOf(value), 1);\n    }\n\n    type === \"radio\" && (value === \"true\" ? (value = true) : (value = false));\n\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"avatar\":\n        setImage(value);\n        break;\n      case \"size\":\n        setSize(value);\n        break;\n      case \"type\":\n        setType(value);\n        break;\n      case \"toxic\":\n        setToxic(value);\n        break;\n      case \"location\":\n        setLocation(newValue);\n        break;\n      case \"price\":\n        setPrice(value);\n        break;\n      case \"temperature\":\n        setTemperature(value);\n        break;\n      case \"watering\":\n        setWatering(value);\n        break;\n      default:\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    plantService\n      .createPlant({\n        name,\n        image,\n        description: { size, type, toxic, location, temperature, watering },\n        sellerId: props.loggedUser,\n        price,\n      })\n      .then(() => {\n        clearState();\n      })\n      .catch((err) => {\n        console.log(err)\n        setError(err.response.data.message)\n        setTimeout(() => setError(undefined),2500)\n      });\n  };\n\n  const handleFile = (e) => {\n    setIsLoading(true);\n\n    const uploadData = new FormData();\n    uploadData.append(\"imageData\", e.target.files[0]);\n\n    uploadService\n      .uploadImg(uploadData)\n      .then((res) => {\n        setIsLoading(false);\n        setImage(res.data.cloudinary_url);\n      })\n      .catch((err) => alert(\"Error, image not uploaded \"));\n  };\n\n  return (\n    <>\n      <h1 className=\"text-center mt-2 mb-3\">Sell a plant</h1>\n      <Form onSubmit={handleSubmit}>\n        <Form.Group className=\"mb-3\" controlId=\"name\">\n          <Form.Label>Name*: </Form.Label>\n          <Form.Control\n            onChange={(e) => handleChange(e)}\n            name=\"name\"\n            value={name}\n            type=\"text\"\n            placeholder=\"Plant's name\"\n          />\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"image\">\n          <Form.Label>Image*: </Form.Label>\n          <Form.Control\n            onChange={(e) => handleFile(e)}\n            name=\"image\"\n            type=\"file\"\n            placeholder=\"Plant's image\"\n          />\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"size\">\n          <Form.Label>Size*: </Form.Label>\n          <Form.Control\n            onChange={(e) => handleChange(e)}\n            name=\"size\"\n            value={size}\n            type=\"text\"\n            placeholder=\"Plant's sizes\"\n          />\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"type\">\n          <Form.Label>Type*: </Form.Label>\n          <Form.Control\n            onChange={(e) => handleChange(e)}\n            name=\"type\"\n            value={type}\n            type=\"text\"\n            placeholder=\"Plant's type\"\n          />\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"toxic\">\n          <Form.Label>Is it toxic for animals?*</Form.Label>\n          {[\"radio\"].map((type) => (\n            <div key={`inline-${type}`}>\n              <Form.Check\n                inline\n                label=\"Yes\"\n                name=\"toxic\"\n                type=\"radio\"\n                id={`inline-${type}-1`}\n                value={true}\n                onChange={(e) => handleChange(e)}\n              />\n              <Form.Check\n                inline\n                label=\"No\"\n                name=\"toxic\"\n                type=\"radio\"\n                id={`inline-${type}-2`}\n                value={false}\n                onChange={(e) => handleChange(e)}\n              />\n            </div>\n          ))}\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"location\">\n          <Form.Label>Location?*</Form.Label>\n          {[\"checkbox\"].map((type) => (\n            <div key={`inline-${type}`} className=\"mb-3\">\n              <Form.Check\n                inline\n                label=\"Indoors\"\n                name=\"location\"\n                type={type}\n                id={`inline-${type}-1`}\n                onChange={(e) => handleChange(e)}\n                value=\"Indoors\"\n              />\n              <Form.Check\n                inline\n                label=\"Outdoors\"\n                name=\"location\"\n                type={type}\n                id={`inline-${type}-2`}\n                onChange={(e) => handleChange(e)}\n                value=\"Outdoors\"\n              />\n            </div>\n          ))}\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"temperature\">\n          <Form.Label>Temperature*: </Form.Label>\n          <Form.Control\n            onChange={(e) => handleChange(e)}\n            name=\"temperature\"\n            value={temperature}\n            type=\"number\"\n            placeholder=\"Temperature\"\n          />\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"watering\">\n          <Form.Label>Watering*: </Form.Label>\n          <Form.Control\n            onChange={(e) => handleChange(e)}\n            name=\"watering\"\n            value={watering}\n            type=\"text\"\n            placeholder=\"Watering\"\n          />\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"price\">\n          <Form.Label>Price*: </Form.Label>\n          <Form.Control\n            onChange={(e) => handleChange(e)}\n            name=\"price\"\n            value={price}\n            type=\"number\"\n            placeholder=\"Price\"\n          />\n          €\n        </Form.Group>\n\n        {isLoading && <Spinner animtion=\"border\" variant=\"success\" />}\n        {error && <p id=\"errorMessage\">{error}</p>}\n        <Button disabled={isLoading} variant=\"primary\" type=\"submit\">\n          {isLoading ? \"Loading...\" : \"Submit\"}\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default PlantForm;\n","import axios from \"axios\";\n\nclass CommentService {\n  constructor() {\n    this.instance = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/comment`,\n      withCredentials: true,\n    });\n  }\n\n  getComments = () => this.instance.get(\"/\");\n  getComment = (id) => this.instance.get(`/${id}`);\n  deleteComment = (id) => this.instance.delete(`/${id}`);\n  createComment = (comment) => this.instance.post(\"/\", comment);\n}\n\nexport default CommentService;\n","import React, { useState } from \"react\";\nimport CommentService from \"../../../services/comment.service\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { FaStar } from \"react-icons/fa\"\nimport \"./CommentForm.css\"\n\nconst commentService = new CommentService();\n\nconst CommentForm = (props) => {\n    const [content, setContent] = useState(\"\")\n    const [rating, setRating] = useState(null)\n    const [hover, setHover] = useState(null)\n\n    const clearState = () => {\n        setContent(\"\")\n        setRating(0)\n    }\n\n    const handleChange = (e) => {\n        const {value, name} = e.target;\n\n        switch (name) {\n            case \"content\":\n                setContent(value);\n                break;\n            case \"rating\":\n                setRating(value);\n                break;\n            default:\n        }\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        const authorId = props.loggedUser;\n\n        commentService\n            .createComment({ content, rating, authorId })\n            .then(() => {\n                clearState()\n            })\n            .catch((err) => console.log(err, 'jgfkjhgkjghj'))\n    }\n\n    return (\n      <>\n        <Form onSubmit={handleSubmit}>\n          <h1>Review this seller </h1>\n          {[...Array(5)].map((star, idx) => {\n            const ratingValue = idx + 1;\n\n            return (\n              <label key={idx}>\n                <input\n                  id=\"starRadio\"\n                  type=\"radio\"\n                  name=\"rating\"\n                  value={ratingValue}\n                  onClick={(e) => handleChange(e)}\n                />\n                <FaStar\n                  className=\"star\"\n                  color={\n                    ratingValue <= (hover || rating) ? \"#ffc107\" : \"#e4e5e9\"\n                  }\n                  size={30}\n                  onMouseEnter={() => setHover(ratingValue)}\n                  onMouseLeave={() => setHover(null)}\n                />\n              </label>\n            );\n          })}\n\n          <Form.Group className=\"mb-3\" controlId=\"content\">\n            <Form.Label>Additional comment:</Form.Label>\n            <Form.Control\n              onChange={(e) => handleChange(e)}\n              name=\"content\"\n              value={content}\n              type=\"text\"\n              placeholder=\"Your comment goes here\"\n            />\n          </Form.Group>\n\n          <Button variant=\"primary\" type=\"submit\">\n            Submit\n          </Button>\n        </Form>\n      </>\n    );\n}\n\nexport default CommentForm","import PlantService from \"../../../../services/plant.service\";\nimport { Button } from \"react-bootstrap\";\n\nconst RemoveItem = ({ id }, props) => {\n  const plantService = new PlantService();\n\n  const removePlant = (id) => {\n    plantService\n      .deletePlant(id)\n      .then((res) => {\n        props.history.push(\"/\");\n      })\n      .catch((err) => console.log(\"error on delete your plant\", err));\n  };\n\n  return (\n    <Button onClick={(id) => removePlant(id)} variant=\"primary\" type=\"button\">\n      Delete a plant\n    </Button>\n  );\n};\n\nexport default RemoveItem;\n","import React, { useEffect, useState } from \"react\"\nimport { Button, Form, Spinner } from \"react-bootstrap\"\nimport PlantService from \"../../../../services/plant.service\";\nimport UploadService from \"../../../../services/upload.service\";\n\nconst plantService = new PlantService();\nconst uploadService = new UploadService();\n\nconst EditPlant = (props, loggedUser) => {\n    \n        const { id } = props.match.params\n\n        const [name, setName] = useState(\"\");\n        const [image, setImage] = useState(\"\");\n        const [size, setSize] = useState(\"\");\n        const [type, setType] = useState(\"\");\n        const [toxic, setToxic] = useState(false);\n        const [location, setLocation] = useState([]);\n        const [temperature, setTemperature] = useState(0);\n        const [watering, setWatering] = useState(\"\");\n        const [price, setPrice] = useState(0);\n        const [isLoading, setIsLoading] = useState(false);\n    \n    \n    const findPlant = (id) => {\n\n        plantService\n            .getPlant(id)\n            .then(plant => {\n\n                setName(plant.data.plant.name);\n                setImage(plant.data.plant.image);\n                setSize(plant.data.plant.description.size);\n                setType(plant.data.plant.description.type);\n                setToxic(plant.data.plant.description.toxic);\n                setLocation(plant.data.plant.description.location);\n                setTemperature(plant.data.plant.description.temperature);\n                setWatering(plant.data.plant.description.watering);\n                setPrice(plant.data.plant.price);\n            })\n            .catch(err => console.log(err))\n    }\n\n        useEffect(() => {\n            findPlant(id)\n\n        }, [id]) //remove id if giving problems (reacthooksfix)\n            \n              \n        const clearState = () => {\n            setName(\"\");\n            setImage(\"\");\n            setSize(\"\");\n            setType(\"\");\n            setToxic(false);\n            setLocation([]);\n            setTemperature(0);\n            setWatering(\"\");\n            setPrice(0);\n        };\n\n\n        const handleChange = (e) => {\n            let { value, name, type } = e.target;\n        \n            let newValue = [...location];\n            if (name === \"location\" && e.target.checked) {\n                newValue.push(value);\n            }\n            if (name === \"location\" && !e.target.checked) {\n                newValue.splice(newValue.indexOf(value), 1);\n            }\n        \n            type === \"radio\" && (value === \"true\" ? (value = true) : (value = false));\n        \n            switch (name) {\n                case \"name\":\n                setName(value);\n                break;\n                case \"avatar\":\n                setImage(value);\n                break;\n                case \"size\":\n                setSize(value);\n                break;\n                case \"type\":\n                setType(value);\n                break;\n                case \"toxic\":\n                setToxic(value);\n                break;\n                case \"location\":\n                setLocation(newValue);\n                break;\n                case \"price\":\n                setPrice(value);\n                break;\n                case \"temperature\":\n                setTemperature(value);\n                break;\n                case \"watering\":\n                setWatering(value);\n                break;\n                default:\n            }\n        };\n\n            const handleSubmitUpdate = (e) => {\n            e.preventDefault();\n            console.log({\n                name,\n                image,\n                description: { size, type, toxic, location, temperature, watering },\n                sellerId: props.loggedUser._id,\n                price,\n            })\n            plantService\n                .editPlant(id, {\n                    name,\n                    image,\n                    description: { size, type, toxic, location, temperature, watering },\n                    sellerId: props.loggedUser._id,\n                    price,\n                })\n                .then((res) => {\n                clearState();\n                })\n                .catch((err) => console.error(err));\n            };\n\n\n            const handleFile = (e) => {\n            setIsLoading(true);\n        \n            const uploadData = new FormData();\n            uploadData.append(\"imageData\", e.target.files[0]);\n        \n            uploadService\n                .uploadImg(uploadData)\n                .then((res) => {\n                    setIsLoading(false);\n                    setImage(res.data.cloudinary_url);\n                })\n                .catch((err) => alert(\"Error, image not uploaded \"));\n            };\n            \n\n\n\n           \n\n    return(\n<>\n      <h1 className=\"text-center mt-2 mb-3\">Edit your plant</h1>\n      <Form onSubmit={handleSubmitUpdate}>\n        <Form.Group className=\"mb-3\" controlId=\"name\">\n          <Form.Label>Name*: </Form.Label>\n          <Form.Control\n            onChange={(e) => handleChange(e)}\n            name=\"name\"\n            value={name}\n            type=\"text\"\n            placeholder=\"Plant's name\"\n          />\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"image\">\n          <Form.Label>Image*: </Form.Label>\n          <Form.Control\n            onChange={(e) => handleFile(e)}\n            name=\"image\"\n            type=\"file\"\n            placeholder=\"Plant's image\"\n          />\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"size\">\n          <Form.Label>Size*: </Form.Label>\n          <Form.Control\n            onChange={(e) => handleChange(e)}\n            name=\"size\"\n            value={size}\n            type=\"text\"\n            placeholder=\"Plant's sizes\"\n          />\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"type\">\n          <Form.Label>Type*: </Form.Label>\n          <Form.Control\n            onChange={(e) => handleChange(e)}\n            name=\"type\"\n            value={type}\n            type=\"text\"\n            placeholder=\"Plant's type\"\n          />\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"toxic\">\n          <Form.Label>Is it toxic for animals?*</Form.Label>\n          {[\"radio\"].map((type) => (\n            <div key={`inline-${type}`}>\n              <Form.Check\n                inline\n                label=\"Yes\"\n                name=\"toxic\"\n                type=\"radio\"\n                id={`inline-${type}-1`}\n                value={true}\n                onChange={(e) => handleChange(e)}\n              />\n              <Form.Check\n                inline\n                label=\"No\"\n                name=\"toxic\"\n                type=\"radio\"\n                id={`inline-${type}-2`}\n                value={false}\n                onChange={(e) => handleChange(e)}\n              />\n            </div>\n          ))}\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"location\">\n          <Form.Label>Location?*</Form.Label>\n          {[\"checkbox\"].map((type) => (\n            <div key={`inline-${type}`} className=\"mb-3\">\n              <Form.Check\n                inline\n                label=\"Indoors\"\n                name=\"location\"\n                type={type}\n                id={`inline-${type}-1`}\n                onChange={(e) => handleChange(e)}\n                value=\"Indoors\"\n              />\n              <Form.Check\n                inline\n                label=\"Outdoors\"\n                name=\"location\"\n                type={type}\n                id={`inline-${type}-2`}\n                onChange={(e) => handleChange(e)}\n                value=\"Outdoors\"\n              />\n            </div>\n          ))}\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"temperature\">\n          <Form.Label>Temperature*: </Form.Label>\n          <Form.Control\n            onChange={(e) => handleChange(e)}\n            name=\"temperature\"\n            value={temperature}\n            type=\"number\"\n            placeholder=\"Temperature\"\n          />\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"watering\">\n          <Form.Label>Watering*: </Form.Label>\n          <Form.Control\n            onChange={(e) => handleChange(e)}\n            name=\"watering\"\n            value={watering}\n            type=\"text\"\n            placeholder=\"Watering\"\n          />\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"price\">\n          <Form.Label>Price*: </Form.Label>\n          <Form.Control\n            onChange={(e) => handleChange(e)}\n            name=\"price\"\n            value={price}\n            type=\"number\"\n            placeholder=\"Price\"\n          />\n          €\n        </Form.Group>\n\n        {isLoading && <Spinner animtion=\"border\" variant=\"success\" />}\n\n        <Button disabled={isLoading} variant=\"primary\" type=\"submit\">\n          {isLoading ? \"Loading...\" : \"Submit\"}\n        </Button>\n      </Form>\n    </>\n  );\n\n}\n\nexport default EditPlant","import axios from \"axios\";\n\nclass MessageService {\n  constructor() {\n    this.instance = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/message`,\n      withCredentials: true,\n    });\n  }\n\n  getMessages = () => this.instance.get(\"/\");\n  getMessage = (id) => this.instance.get(`/${id}`);\n  createMessage = (message) => this.instance.post(\"/\", message);\n  deleteMessage = (id) => this.instance.delete(`/${id}`);\n}\n\nexport default MessageService;\n","import axios from \"axios\";\r\n\r\nclass UserService {\r\n  constructor() {\r\n    this.instance = axios.create({\r\n      baseURL: `${process.env.REACT_APP_API_URL}/user`,\r\n      withCredentials: true,\r\n    });\r\n  }\r\n\r\n  getUsers = () => this.instance.get(\"/\");\r\n  getUser = (username) => this.instance.get(`/${username}`);\r\n  editUser = (id, plant) => this.instance.put(`/${id}`, plant);\r\n  createUser = (user) => this.instance.post(\"/\", user);\r\n  deleteUSer = (id) => this.instance.delete(`/${id}`);\r\n}\r\n\r\nexport default UserService;\r\n","import React, { useEffect, useState } from \"react\";\nimport MessageService from \"../../../services/message.service\";\nimport { Button, Form } from \"react-bootstrap\";\nimport UserService from \"../../../services/user.service\"\n\n\nconst messageService = new MessageService();\n\nconst SendMessage = ({seller, loggedUser}) => {\n\n\n  const [subject, setSubject] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [username, setUsername] = useState(\"\")\n  const [address, setAddress] = useState(\"\")\n  const [avatar, setAvatar] = useState(\"\")\n  const [plantSellerId, setPlantSellerId] = useState(undefined)\n\n\n\n  useEffect(() => {\n    const getOneUser = (seller) => {\n\n      setUsername(seller?.username)\n      setAddress(seller?.address)\n      setAvatar(seller?.avatar)\n      setPlantSellerId(seller?._id)\n\n    }\n\n    getOneUser(seller)\n  }, [seller])\n\n  useEffect(() => {\n    setUsername(seller?.username)\n    setAddress(seller?.address)\n    setAvatar(seller?.avatar)\n    setPlantSellerId(seller?._id)\n    \n  }, [seller, loggedUser])\n\n  const clearState = () => {\n    setSubject(\"\");\n    setContent(\"\");\n  };\n\n  const handleChange = (e) => {\n    const { value, name } = e.target;\n\n    switch (name) {\n      case \"content\":\n        setContent(value);\n        break;\n      case \"subject\":\n        setSubject(value);\n        break;\n      default:\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const authorId = loggedUser._id;\n    const receiverId = plantSellerId\n    messageService\n      .createMessage({ content, subject, authorId, receiverId })\n      .then((res) => {\n        clearState();\n      })\n      .catch((err) => console.log(err));\n  };\n\n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n        <img src={avatar} alt=\"User \" />\n        <h1>Send a message to {username} </h1>\n        <h2>Address: {address}</h2>\n        <Form.Group className=\"mb-3\" controlId=\"subject\">\n          <Form.Label>Subject:* </Form.Label>\n\n          <Form.Control\n            onChange={(e) => handleChange(e)}\n            name=\"subject\"\n            value={subject}\n            type=\"text\"\n            placeholder=\"Subject\"\n          />\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"content\">\n          <Form.Label>Message:* </Form.Label>\n          <Form.Control\n            onChange={(e) => handleChange(e)}\n            name=\"content\"\n            value={content}\n            type=\"text\"\n            placeholder=\"Type here your message\"\n          />\n        </Form.Group>\n\n        <Button variant=\"primary\" type=\"submit\">\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default SendMessage;\n","import { useState } from \"react\"\nimport { Button, Container, Modal, Row, Spinner } from \"react-bootstrap\"\nimport SendMessage from \"../../SendMessage/SendMessage\"\n\n\n\n\nconst MessageForm = (props) => {\n\n\n  const { seller } = props\n  const { loggedUser } = props\n  \n    const [showForm,setShowForm] = useState(false)\n    // const [message, setMessage] = useState(\"\")\n\n    const openModal = () => {\n\n        setShowForm(true)\n\n    }\n\n    const closeModal = () => {\n\n        setShowForm(false)\n\n    }\n\n    // const handleChange = (e) => {\n\n    //     const { value } = e.target\n\n    //     setMessage(value)\n\n    // } \n\n    return(\n\n        <Container>\n        <Button block className=\"mt-2\" onClick={() => openModal()}>Go ahead and send a message</Button>\n\n        <Modal show={showForm} onHide={() => closeModal()}>\n          <Modal.Header closeButton>\n            <Modal.Title>What would you like to say?</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <SendMessage loggedUser={loggedUser} seller={seller}  closeModal={() => closeModal()} />\n          </Modal.Body>\n        </Modal>\n        <Row className=\"mt-4\">\n          {\n            //this.displayCoasters()\n          }\n        </Row>\n      </Container>\n\n    )\n\n}\n\nexport default MessageForm","import { useEffect, useState } from \"react\"\nimport PlantService from \"../../../services/plant.service\"\nimport { Card, Container, ListGroup, ListGroupItem } from \"react-bootstrap\"\nimport RemoveItem from \"./RemoveItem/RemoveItem\"\nimport { Link } from \"react-router-dom\"\nimport EditPlant from \"./Editplant/Editplant\"\nimport MessageForm from \"./MessageForm/MessageForm\"\nconst { formatDate } = require(\"../../../utils/index\")\n\n\nconst PlantDetails = (props) => {\n  const plantService = new PlantService();\n  const [plantsDetails, setPlantsDetails] = useState(undefined);\n  const { id } = props.match.params;\n  // const user = plantsDetails.sellerId\n  const [user, setUser] = useState({})\n  \n\n  const getOnePlant = (id) => {\n    plantService\n      .getPlant(id)\n      .then((plant) => {\n        return setPlantsDetails(plant.data.plant);\n      })\n      .then(() => setUser(plantsDetails?.sellerId))\n      .catch((err) => console.log(err));\n  };\n\n  useEffect(() => {\n    getOnePlant(id);\n  }, []); \n\n  useEffect(() => {\n    getOnePlant(id);\n  }, [props]);\n\n  return (\n    <>\n      {plantsDetails ? (\n        <div>\n          <Card style={{ width: \"18rem\" }}>\n            <Card.Img variant=\"top\" src={plantsDetails.image} />\n            <Card.Body>\n              <Card.Title>{plantsDetails.name}</Card.Title>\n              <Card.Text>\n                Some quick example text to build on the card title and make up\n                the bulk of the card's content.\n              </Card.Text>\n            </Card.Body>\n            <ListGroup className=\"list-group-flush\">\n              <ListGroupItem>Price:{plantsDetails.price}</ListGroupItem>\n              <ListGroupItem>\n                Size: {plantsDetails.description.size}\n              </ListGroupItem>\n              <ListGroupItem>\n                Type: {plantsDetails.description.type}\n              </ListGroupItem>\n              <ListGroupItem>\n                Toxic: {plantsDetails.description.toxic}\n              </ListGroupItem>\n              <ListGroupItem>\n                Temperature: {plantsDetails.description.temperature}\n              </ListGroupItem>\n              <ListGroupItem>\n                Watering: {plantsDetails.description.watering}\n              </ListGroupItem>\n\n              <div>\n                <>\n                  {props.loggedUser?.role === \"Admin\" && <RemoveItem id={id} {...props} />}\n                </>\n              </div>\n\n              <div>\n                <>\n                  {props.loggedUser?._id === plantsDetails.sellerId._id &&\n                   \n                   <Container>\n                        <RemoveItem sellerDetails={plantsDetails.sellerId} {...props} />\n                        <Link className=\"btn bg-success\" to={`/edit-plant/${id}`}>\n                            Edit plant\n                        </Link>\n                    </Container>}\n                </>\n              </div>\n\n                    {props.loggedUser ? (\n\n                      <h2> Hello {props.loggedUser.username} </h2>\n                    ) : (\n                      <div>\n                        <>\n                          <p><Link to=\"/login\">Login</Link> in order to see our seller</p>\n                        </>\n                      </div>\n                        )\n                    }\n              <>\n                {props.loggedUser && props.loggedUser?.username !== plantsDetails.sellerId.username &&\n                  <div>\n                    <hr />\n\n                    <Card.Img\n                      variant=\"top\"\n                      src={plantsDetails.sellerId?.avatar}\n                    />\n                    <ListGroupItem>\n                      <h3>Name: {plantsDetails.sellerId?.username}</h3>\n                    </ListGroupItem>\n                    <ListGroupItem>\n                      <h4>Role: {plantsDetails.sellerId?.role}</h4>\n                    </ListGroupItem>\n                    {/* <ListGroupItem>\n                      Plantb user since:{\" \"}\n                      {formatDate(plantsDetails.sellerId?.createdAt)}\n                    </ListGroupItem>\n                    <ListGroupItem>\n                      Address: {plantsDetails.sellerId?.address}\n                    </ListGroupItem>\n                    <ListGroupItem>\n                      Email: {plantsDetails.sellerId?.email}\n                    </ListGroupItem> */}\n                    <Card.Body>\n                    <MessageForm {...props} seller={plantsDetails.sellerId} />\n                    <Card.Link href=\"#\">Another Link</Card.Link>\n                  </Card.Body>\n                  </div>\n                }\n              </>\n            </ListGroup>         \n          </Card>\n        </div>\n      ) : (\n        <p>Loading...</p>\n      )}\n    </>\n  );\n};\n\nexport default PlantDetails;\n","import axios from \"axios\";\n\nclass CartService {\n  constructor() {\n    this.instance = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/cart`,\n      withCredentials: true,\n    });\n  }\n\n  getCart = (id) => this.instance.get(`/${id}`);\n  createCart = (cart) => this.instance.post(\"/\", cart);\n  editCart = (data) => this.instance.put(`/${data.id}`,data);\n}\n\nexport default CartService;\n","import \"./PlantsList.css\"\nimport PlantService from \"../../../services/plant.service\";\nimport { useEffect, useState } from \"react\";\nimport { Col, Container, Form, Row } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { FaShoppingCart } from \"react-icons/fa\";\nimport UserService from \"../../../services/user.service\";\nimport CartService from \"../../../services/cart.service\";\n\n\nconst PlantsList = (props) => {\n  \n     const plantService = new PlantService();\n     const userService = new UserService();\n     const cartService = new CartService();\n\n     const [plantsList, setPlantsList] = useState([]);\n     const [user, setUser] = useState(\"\")\n\n     console.log(user)\n\n     useEffect(() => {\n        plantService\n            .getPlants()\n            .then((plants) => {\n                setPlantsList(plants.data)\n            })\n            .catch((err) => console.log(\"Error while trying to get plants list\", err))\n    }, []);\n\n    useEffect(() => {\n\n      setUser(props.loggedUser)\n\n    }, [props.loggedUser])\n    \n    \n    const addToCart = (plant) => {\n      // userService\n      //       .getUser(user)\n      //       .then((users) => {\n      //         // console.log(user);\n      //         console.log(users)\n      //         })\n      //       \n\n      cartService\n          .editCart({id: user.cart, items: plant })\n          .then(res => {\n\n              console.log(\"esto es res\",res)\n\n          })\n          .catch((err) => console.log(err));\n\n      // plantService\n      //       .getPlant(plant)\n      //       .then(plant =>{\n\n      //         console.log(\"esto es plant\",plant.data.plant._id)\n\n      //       })\n      //       .catch(err => console.log(err))\n\n      \n\n    };\n\n    return (\n      <>\n        {plantsList ? (\n          <Container className=\"plantslist\">\n            <h1 className=\"text-center\">Latest plants</h1>\n            <Row>\n              {plantsList.map((plant) => {\n                return (\n                  <Col xs={12} sm={6} lg={4}>\n                    <div className=\"plantslist_imagecontainer\">\n                      <img alt=\"plant's pic\" src={plant.image} />\n                    </div>\n                    <p>{plant.name}</p>\n                    <p>{plant.price}€</p>\n                    <Row>\n                      <Col xs={12} sm={12} lg={6} className=\"d-flex justify-content-center\">\n                        <Link\n                          to={`/plant/${plant._id}`}\n                          className=\"btn btn-success rounded-pill\"\n                        >See details</Link>\n                      </Col>\n                      <Col className=\"d-flex justify-content-center\" xs={12} sm={12} lg={6} >\n                      <Link to={`/plants/${user}`}>\n                          <button onClick={() => addToCart(plant._id)} className=\"btn btn-outline-success rounded-pill\" type=\"submit\"><FaShoppingCart/> Add to cart</button>\n                      </Link>\n                      </Col>\n                    </Row>\n                    <hr className=\"mt-5 mb-5\" />\n                  </Col>\n                );\n              })}\n            </Row>\n          </Container>\n        ) : (\n          <p>Loading...</p>\n        )}\n      </>\n    );\n}\n\nexport default PlantsList","import './CartItem.css'\nimport { Link }  from 'react-router-dom'\n\nconst CartItem = (props) => {\n\n  console.log(props.id)\n\n    return (\n      <div className=\"cart\">\n        <div className=\"cartitem__image\"></div>\n\n        <Link to={`/product/${111}`} className=\"cartitem__name\">\n          <p>Product 1</p>\n        </Link>\n        <p className=\"cartitem__price\">$499.99</p>\n        \n        <select className=\"cartitem__select\">\n          <option value=\"1\">1</option>\n          <option value=\"2\">2</option>\n          <option value=\"3\">3</option>\n          <option value=\"4\">4</option>\n        </select>\n\n        <button className=\"cartitem__deletebtn\">\n            <i className=\"fas fa-trash\"></i>\n        </button>\n      </div>\n    );\n}\n\nexport default CartItem\n","import './Cart.css'\nimport CartItem from './../CartItem/CartItem'\n\nconst Cart = () => {\n    return (\n      <div className=\"cart\">\n        <div className=\"cart__left\">\n          <h2>Shopping cart</h2>\n\n          <CartItem />\n        </div>\n        <div className=\"cart__right\">\n          <div className=\"cart__info\">\n            <p>Subtotal (0) items</p>\n            <p>3 euros</p>\n          </div>\n          <div>\n              <button>Proceed to checkout</button>\n          </div>\n        </div>\n      </div>\n    );\n}\n\nexport default Cart\n\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useEffect, useState } from \"react\"\nimport { Card, Container } from \"react-bootstrap\"\nimport MessageService from \"../../../../services/message.service\"\nimport MessageForm from \"../../PlantDetails/MessageForm/MessageForm\"\nconst { formatDate } = require(\"../../../../utils/index\")\n\n\nconst MessageList = (props) => {\n    const messageService = new MessageService()\n    const [ message, setMessage] = useState(null)\n    const { loggedUser } = props\n    const { id } = props.match.params  \n     \n    const getMessages = (id) => {\n        \n        messageService\n            .getMessages({authorId: id})\n            .then(messages => {\n                setMessage(messages?.data)\n            })\n            .catch(err => console.log(err))\n        }\n\n    useEffect(() => getMessages(), [getMessages, id])\n\n\n    return(\n        <>\n            {message?.map(el =>{\n            return(\n                \n                <Container>\n                {loggedUser._id === el.receiverId &&\n                \n                    <Card className=\"text-center\">\n                    \n                    <Card.Header><img src={el.authorId.avatar} width=\"40px\" alt=\"User \" />{ el.authorId.username }</Card.Header>\n                    <Card.Body>\n                        <Card.Title>{el.subject}</Card.Title>\n                        <Card.Text>\n                        {el.content}\n                        </Card.Text>\n                        <MessageForm {...props} seller={el.authorId} />\n                    </Card.Body>\n                    <Card.Footer className=\"text-muted\">{formatDate(el.createdAt)}</Card.Footer>\n                    </Card>                                \n                \n                }\n                </Container>                \n            )\n        })}\n        \n        </>\n    )\n\n}\n\nexport default MessageList","import Home from \"./../pages/Home/Home\"\nimport Login from \"../pages/Login/Login\";\nimport SignUp from \"../pages/Signup/Signup\";\nimport Profile from \"./../pages/Profile/Profile\";\nimport PlantForm from \"../pages/PlantForm/PlantForm\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport CommentForm from \"../pages/CommentForm/CommentForm\";\nimport PlantDetails from \"../pages/PlantDetails/PlantDetails\";\nimport EditPlant from \"../pages/PlantDetails/Editplant/Editplant\";\nimport SendMessage from \"../pages/SendMessage/SendMessage\";\nimport PlantsList from \"../pages/PlantsList/PlantsList\";\nimport Cart from \"../pages/Cart/Cart\"\n\nimport MessageList from \"../pages/messages/MessageList/MessageList\";\n\nconst Routes = ({ storeUser, loggedUser }) => {\n  return (\n    <Switch>\n      <Route exact path=\"/\" render={ (props) => <Home/> }/>\n      <Route exact path=\"/new-plant\" render={ (props) => loggedUser ? (<PlantForm { ...props } loggedUser={ loggedUser } />) : (<Redirect to=\"/login\" />)}/>\n      <Route exact path=\"/new-comment\" render={ (props) => loggedUser ? ( <CommentForm { ...props } loggedUser={ loggedUser } />) : (<Redirect to=\"/login\" />)}/>\n      <Route path=\"/new-message\" render={ (props) => loggedUser ? ( <SendMessage { ...props } loggedUser={ loggedUser } />) : (<Redirect to=\"/login\" />)}/>\n      <Route exact path=\"/register\" render={ (props) => <SignUp storeUser={ storeUser } { ...props } /> } />\n      <Route exact path=\"/login\" render={ (props) => <Login storeUser={ storeUser } { ...props } /> } />\n      <Route exact path=\"/new-plant\" render={ (props) => <PlantForm { ...props } loggedUser={ loggedUser } /> } />\n      <Route path=\"/plant/:id\" render={ (props) => <PlantDetails { ...props } loggedUser={ loggedUser } /> } />\n      <Route exact path=\"/new-comment\" render={ (props) => <CommentForm { ...props } loggedUser={ loggedUser } /> } />\n      <Route exact path=\"/login\" render={ (props) => <Login storeUser={ storeUser } { ...props } /> } />\n      <Route path=\"/edit-plant/:id\" render={ (props) => <EditPlant { ...props } loggedUser={ loggedUser } /> } />\n      <Route path=\"/plants\" render={(props) => <PlantsList {...props} loggedUser={ loggedUser } /> }/>\n      <Route path=\"/plants/:username\" render={(props) => <PlantsList {...props} loggedUser={ loggedUser } /> }/>\n      <Route path=\"/cart\" render={(props) => <Cart {...props}/>}/>\n      <Route path=\"/message-list/:id\" render={ (props) => <MessageList {...props} loggedUser={loggedUser}/>} />\n        \n      { loggedUser !== null ? (\n        <Route path={ `/${loggedUser.username}` } render={(props) => <Profile { ...props } loggedUser={ loggedUser } /> } />\n      ) \n      : \n      (\n        <Route path=\"/\" render={ () => <Redirect to=\"/login\" /> } />\n      )}\n\n    </Switch>\n  );\n};\n\nexport default Routes;\n","import \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport Navigation from \"./components/layout/Navigation/Navigation\";\nimport Routes from \"./components/routes\";\nimport AuthService from \"./services/auth.service\";\n\nconst authService = new AuthService();\n\nconst App = () => {\n  const [loggedUser, setLoggedUser] = useState(undefined);\n  const storeUser = (user) => setLoggedUser(user);\n\n  useEffect(() => {\n    const fetchUser = () => {\n      authService\n        .isloggedin()\n        .then((res) => storeUser(res.data))\n        .catch(() => storeUser(null));\n    };\n    fetchUser();\n  }, []);\n  \n  return (\n    <>\n      <Navigation loggedUser={loggedUser} storeUser={storeUser} />\n\n      {loggedUser !== undefined ? (\n        <Routes storeUser={storeUser} loggedUser={loggedUser} />\n      ) : (\n        <p>Loading...</p>\n      )}  \n      \n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n","module.exports = {\n        \n    \n    formatDate: date => {\n\n      let dateF = new Date(date)\n\n    let month = '' + (dateF.getMonth() + 1)\n    let day = '' + dateF.getDate()\n    let year = dateF.getFullYear()\n\n    if (month.length < 2) month = '0' + month;\n    if (day.length < 2) day = '0' + day;\n\n    return [year, month, day].join('-')\n  },\n\n\n  formatSignDate: date => {\n\n    var today = new Date();\n  \n    let month = '' + (today.getMonth() + 1)\n    let day = '' + today.getDate()\n    let year = today.getFullYear() - 18\n\n\n    if (month.length < 2) month = '0' + month;\n    if (day.length < 2) day = '0' + day;\n\n    return [year, month, day].join('-')\n  }\n\n}"],"sourceRoot":""}