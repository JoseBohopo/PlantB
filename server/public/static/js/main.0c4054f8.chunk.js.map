{"version":3,"sources":["components/layout/Searchbar/Searchbar.js","components/layout/Navigation/NotLoggedUser/NotLoggedUser.js","services/plant.service.js","services/auth.service.js","components/layout/Navigation/LoggedUser/LoggedUser.js","components/layout/Navigation/DropdownItem/Dropdownitem.js","logo.svg","components/layout/Navigation/Navigation.js","homepage_plant.png","about_us_image.png","components/pages/Home/Home.js","components/pages/Login/Login.js","services/upload.service.js","components/pages/Signup/Signup.js","components/pages/Profile/Profile.js","components/pages/PlantForm/PlantForm.js","services/comment.service.js","components/pages/CommentForm/CommentForm.js","components/pages/PlantDetails/RemoveItem/RemoveItem.js","components/pages/PlantDetails/Editplant/Editplant.js","services/message.service.js","services/user.service.js","components/pages/SendMessage/SendMessage.js","components/pages/PlantDetails/MessageForm/MessageForm.js","components/pages/PlantDetails/PlantDetails.js","services/cart.service.js","components/pages/PlantsList/PlantsList.js","components/pages/CartItem/CartItem.js","components/pages/Cart/Cart.js","components/pages/messages/MessageList/MessageList.js","components/routes/index.js","App.js","reportWebVitals.js","index.js","utils/index.js"],"names":["Searchbar","props","useState","searchValue","setSearchValue","displayPlants","changeToggle","toggle","console","log","clearState","FormControl","className","type","placeholder","value","onChange","e","target","setTimeout","handleChange","NotLoggedUser","Nav","Link","as","to","NavDropdown","Divider","PlantService","getPlants","instance","get","getPlant","id","createPlant","plant","post","deletePlant","delete","editPlant","put","this","axios","create","baseURL","process","withCredentials","AuthService","signup","username","password","email","address","age","role","avatar","login","logout","isloggedin","LoggedUser","authService","then","storeUser","catch","err","title","Navbar","Text","href","loggedUser","alt","src","Item","_id","onClick","DropdownItem","Dropdown","image","name","price","Navigation","plants","setPlants","plantsList","setPlantsList","setToggle","searching","setSearching","useEffect","res","data","length","collapseOnSelect","expand","variant","Container","Brand","logoImg","Toggle","Collapse","autoclose","show","onBlur","onToggle","isOpen","metadata","filteredPlants","filter","toLowerCase","includes","Menu","map","Home","Row","Col","xs","md","lg","homepage_image","about_image","Login","setUsername","setPassword","error","setErrorLogin","handleInput","sm","Form","onSubmit","preventDefault","history","push","response","message","undefined","Group","controlId","Label","Control","Button","UploadService","uploadImg","imageForm","formatSignDate","require","uploadService","Signup","setEmail","setAddress","setAge","setRole","setAvatar","isLoading","setIsLoading","uploadData","FormData","append","files","cloudinary_url","alert","handleFile","tmp","user","apiKey","language","options","types","fields","componentRestrictions","country","max","Check","inline","label","defaultChecked","Spinner","animation","disabled","Profile","plantService","PlantForm","setName","setImage","size","setSize","setType","toxic","setToxic","location","setLocation","temperature","setTemperature","watering","setWatering","setPrice","setError","newValue","checked","splice","indexOf","description","sellerId","animtion","CommentService","getComments","getComment","deleteComment","createComment","comment","commentService","CommentForm","content","setContent","rating","setRating","hover","setHover","authorId","Array","star","idx","ratingValue","color","onMouseEnter","onMouseLeave","RemoveItem","removePlant","EditPlant","match","params","findPlant","MessageService","getMessages","getMessage","createMessage","deleteMessage","UserService","getUsers","getUser","editUser","createUser","deleteUSer","messageService","SendMessage","seller","subject","setSubject","plantSellerId","setPlantSellerId","success","getOneUser","receiverId","MessageForm","showForm","setShowForm","closeModal","block","Modal","onHide","Header","closeButton","Title","Body","PlantDetails","formatDate","plantsDetails","setPlantsDetails","setUser","getOnePlant","Card","style","width","Img","ListGroup","ListGroupItem","sellerDetails","CartService","getCart","createCart","cart","editCart","PlantsList","cartService","items","addToCart","CartItem","userCart","Cart","setCart","cartFound","MessageList","setMessage","messages","el","Footer","createdAt","Routes","exact","path","render","App","setLoggedUser","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById","module","exports","date","dateF","Date","month","getMonth","day","getDate","year","getFullYear","join","today"],"mappings":"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","file":"static/js/main.0c4054f8.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { FormControl } from \"react-bootstrap\";\r\nimport \"./Searchbar.css\"\r\n\r\nconst Searchbar = (props) => {\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const { displayPlants } = props;\r\n  const { changeToggle } = props\r\n  const { toggle } = props\r\n\r\n  console.log(toggle)\r\n\r\n  const handleChange = (e) => {\r\n    const { value } = e.target;\r\n    setSearchValue(value);\r\n    displayPlants(value);\r\n    setTimeout(() => {\r\n        clearState(searchValue);\r\n      changeToggle(toggle)\r\n    }, 5000);\r\n    \r\n  };\r\n  const clearState = (searchValue) => {\r\n\r\n    setSearchValue(\"\")\r\n  } \r\n\r\n  return (\r\n    <>\r\n      <FormControl\r\n        className=\"searchbar__input rounded-pill\"\r\n        type=\"search\"\r\n        placeholder=\"Search for a plant\"\r\n        aria-label=\"Search\"\r\n        value={searchValue}\r\n        onChange={(e) => handleChange(e)}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Searchbar;\r\n","import { Nav, NavDropdown } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//Style in LoggedUser.css\r\n\r\n const NotLoggedUser = () => {\r\n\r\n    return (\r\n      <>\r\n        <Nav.Link className=\"navbar__large navbar__large__text\" as={Link} to=\"/login\">\r\n          Sign in\r\n        </Nav.Link>\r\n\r\n        <div className=\"navbar__collapsed\">\r\n          <NavDropdown.Divider />\r\n          <Nav.Link className=\"navbar__collapsed__text\" as={Link} to=\"/login\">\r\n            Sign in\r\n          </Nav.Link>\r\n        </div>\r\n      </>\r\n    );\r\n}\r\n\r\nexport default NotLoggedUser","import axios from \"axios\";\r\n\r\nclass PlantService {\r\n  constructor() {\r\n    this.instance = axios.create({\r\n      baseURL: `${process.env.REACT_APP_API_URL}/plant`,\r\n      withCredentials: true\r\n    });\r\n  }\r\n\r\n  getPlants = () => this.instance.get(\"/\");\r\n  getPlant = (id) => this.instance.get(`/${id}`);\r\n  createPlant = (plant) => this.instance.post(\"/\", plant);\r\n  deletePlant = (id) => this.instance.delete(`/${id}`);\r\n  editPlant = (id, plant) => this.instance.put(`/${id}`, plant);\r\n}\r\n\r\nexport default PlantService;","import axios from \"axios\";\r\n\r\nclass AuthService {\r\n  constructor() {\r\n    this.instance = axios.create({\r\n      baseURL: `${process.env.REACT_APP_API_URL}/auth`,\r\n      withCredentials: true,\r\n    });\r\n  }\r\n\r\n  signup = (\r\n    username,\r\n    password,\r\n    email,\r\n    address,\r\n    age,\r\n    role,\r\n    avatar = \"\"\r\n  ) =>\r\n    this.instance.post(\"/signup\", {\r\n      username,\r\n      password,\r\n      email,\r\n      address,\r\n      age,\r\n      role,\r\n      avatar\r\n    });\r\n  login = (username, password) =>\r\n    this.instance.post(\"/login\", { username, password });\r\n  logout = () => this.instance.get(\"/logout\");\r\n  isloggedin = () => this.instance.post(\"/isloggedin\");\r\n}\r\n\r\nexport default AuthService;\r\n","import { Link } from \"react-router-dom\";\r\nimport { Nav, Navbar, NavDropdown } from \"react-bootstrap\";\r\nimport AuthService from \"../../../../services/auth.service\";\r\nimport \"./LoggedUser.css\"\r\n\r\nconst LoggedUser = (props) => {\r\n\r\n  const authService = new AuthService();\r\n\r\n  const logout = () => {\r\n    authService\r\n        .logout()\r\n        .then(() => props.storeUser(null))\r\n        .catch((err) => console.log(err));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <NavDropdown\r\n        className=\"navbar__large\"\r\n        title={\r\n          <Navbar.Text>\r\n            Welcome,\r\n            <a href=\"#/\"> {props.loggedUser.username} </a>\r\n            <img\r\n              alt=\"user avatar\"\r\n              className=\"navbar__avatar rounded-circle\"\r\n              src={props.loggedUser.avatar}\r\n            />\r\n          </Navbar.Text>\r\n        }\r\n        id=\"collasible-nav-dropdown\"\r\n      >\r\n        <NavDropdown.Item as={Link} to={`/${props.loggedUser.username}`}>\r\n          My profile\r\n        </NavDropdown.Item>\r\n        <NavDropdown.Item\r\n          as={Link}\r\n          to={`/message-list/${props.loggedUser._id}`}\r\n        >\r\n          Messages\r\n        </NavDropdown.Item>\r\n        <NavDropdown.Item as={Link} to=\"/new-plant\">\r\n          Add a plant\r\n        </NavDropdown.Item>\r\n        <NavDropdown.Item as={Link} to=\"/new-comment\">\r\n          Add a comment\r\n        </NavDropdown.Item>\r\n        <NavDropdown.Divider />\r\n        <NavDropdown.Item as={Link} to=\"/\" onClick={logout}>\r\n          Logout\r\n        </NavDropdown.Item>\r\n      </NavDropdown>\r\n\r\n      <div className=\"navbar__collapsed\">\r\n        <NavDropdown.Divider /> \r\n        <Nav.Link className=\"navbar__collapsed__text\" as={Link} to={`/${props.loggedUser.username}`}>My profile</Nav.Link>\r\n        <NavDropdown.Divider />\r\n        <Nav.Link className=\"navbar__collapsed__text\" as={Link} to={`/message-list/${props.loggedUser._id}`}>Messages</Nav.Link>\r\n        <NavDropdown.Divider />\r\n        <Nav.Link className=\"navbar__collapsed__text\" as={Link} to=\"/new-plant\">Sell a plant</Nav.Link>\r\n        <NavDropdown.Divider />\r\n        <Nav.Link className=\"navbar__collapsed__text\" as={Link} to=\"/\" onClick={logout}>Logout</Nav.Link>\r\n      </div>\r\n    </>\r\n  );\r\n\r\n}\r\n\r\nexport default LoggedUser","import { Dropdown } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Dropdownitem.css\";\r\n\r\nconst DropdownItem = ({ plant }) => {\r\n  return plant ? (\r\n    <Dropdown.Item as={Link} to={`/plant/${plant._id}`}>\r\n      <div className=\"row\">\r\n        <div className=\"col-3\">\r\n          <img src={plant.image} alt={plant.name} />\r\n        </div>\r\n        <div className=\"col-7\">\r\n          <p>{plant.name}</p>\r\n        </div>\r\n        <div className=\"col-2\">\r\n          <p>€{plant.price}</p>\r\n        </div>\r\n      </div>\r\n    </Dropdown.Item>\r\n  ) : (\r\n    <p>Loading......</p>\r\n  );\r\n};\r\n\r\nexport default DropdownItem;\r\n","export default __webpack_public_path__ + \"static/media/logo.7a0ff4d1.svg\";","import \"./navigation.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Searchbar from \"../Searchbar/Searchbar\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport NotLoggedUser from \"./NotLoggedUser/NotLoggedUser\";\r\nimport PlantService from \"../../../services/plant.service\";\r\nimport LoggedUser from \"./LoggedUser/LoggedUser\";\r\nimport DropdownItem from \"./DropdownItem/Dropdownitem\";\r\nimport { Container, Dropdown, Nav, Navbar } from \"react-bootstrap\";\r\nimport logoImg from \"../../../logo.svg\";\r\n\r\nconst Navigation = (props) => {\r\n  const [plants, setPlants] = useState([]);\r\n  const [plantsList, setPlantsList] = useState([]);\r\n\r\n  const [toggle, setToggle] = useState(false);\r\n  const [searching, setSearching] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const plantService = new PlantService();\r\n    plantService.getPlants().then((res) => setPlantsList(res.data));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!searching || plants.length === 0) setToggle(false);\r\n    else setToggle(true);\r\n  }, [plants, searching]);\r\n\r\n  const displayPlants = (searchValue) => {\r\n    if (searchValue && searchValue.length > 0) setSearching(true);\r\n    else setSearching(false);\r\n\r\n    const filteredPlants = plantsList.filter((plant) =>\r\n      plant.name.toLowerCase().includes(searchValue.toLowerCase())\r\n    );\r\n  \r\n    setPlants(filteredPlants);\r\n  };\r\n\r\n  const changeToggle = (toggle) => {\r\n\r\n    toggle && setToggle(false)\r\n  }\r\n    \r\n\r\n  return (\r\n    <Navbar\r\n      className=\"navbar fixed-top\"\r\n      collapseOnSelect\r\n      expand=\"lg\"\r\n      variant=\"dark\"\r\n    >\r\n      <Container>\r\n        <Navbar.Brand className=\"navbar__logo\" as={Link} to=\"/\">\r\n          <img alt=\"logo\" src={logoImg} /> Plant B\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n          <Nav className=\"m-auto\">\r\n            <Dropdown\r\n              className=\"d-inline mx-2 \"\r\n              autoclose=\"inside\"\r\n              show={toggle}\r\n              onBlur={e => e.target.value = \"\" }\r\n              onToggle={(isOpen, e, metadata) => {\r\n                console.log(e);\r\n                if (plants.length === 0) setToggle(false);\r\n                else if (isOpen) setToggle(isOpen);\r\n                else if (e.target.type !== \"button\") setToggle(isOpen);\r\n              }}\r\n            >\r\n              <Dropdown.Toggle\r\n                className=\"navbar__toggle\"\r\n                id=\"dropdown-autoclose-inside\"\r\n              >\r\n                <Searchbar toggle={toggle} changeToggle={() => changeToggle} displayPlants={displayPlants} />\r\n              </Dropdown.Toggle>\r\n              <Dropdown.Menu className=\"dropdown__menu\">\r\n                {plants.length > 0 &&\r\n                  plants.map((plant) => (\r\n                    <Link to={`/plant/${plant._id}`}>\r\n                      <DropdownItem key={plant._id} plant={plant} />\r\n                    </Link>\r\n                  ))}\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          </Nav>\r\n          <Nav>\r\n            {props.loggedUser ? <LoggedUser {...props} /> : <NotLoggedUser />}\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","export default __webpack_public_path__ + \"static/media/homepage_plant.174b6a00.png\";","export default __webpack_public_path__ + \"static/media/about_us_image.d34c4d2c.png\";","import { Row, Col, Container } from \"react-bootstrap\"\r\nimport { Link } from \"react-router-dom\";\r\nimport homepage_image from \"./../../../homepage_plant.png\"\r\nimport about_image from \"./../../../about_us_image.png\";\r\nimport \"./Home.css\"\r\n\r\nconst Home = () => {\r\n\r\n\r\n    return (\r\n      <>\r\n        <Container className=\"homepage mt-5 mb-5\">\r\n          <Row className=\"homepage__row justify-content-center align-items-center\">\r\n            <Col xs={false} md={false} lg={1} />\r\n            <Col className=\"homepage__col__text\" xs={12} md={12} lg={5}>\r\n              <h1>Plant B</h1>\r\n              <h3>Your favorite plant's shop in your neighborhood 🌱</h3>\r\n              <p>\r\n                Plants reduce stress levels and boost your mood - making them\r\n                perfect for your home and your work space, too.\r\n              </p>\r\n              <Link to={\"/plants\"}>\r\n                <button className=\"homepage__btn\">Check our plants</button>\r\n              </Link>\r\n            </Col>\r\n            <Col xs={12} md={12} lg={5}>\r\n              <img alt=\"plant\" src={homepage_image} />\r\n            </Col>\r\n            <Col xs={false} md={false} lg={1} />\r\n          </Row>\r\n        </Container>\r\n\r\n        <br/>\r\n\r\n        <Container className=\"about mt-5\">\r\n          <Row className=\"justify-content-center align-items-center\">\r\n            <Col xs={false} md={false} lg={1} />\r\n            <Col xs={12} md={12} lg={5}>\r\n              <img className=\"rounded-circle\" alt=\"plant\" src={about_image} />\r\n            </Col>\r\n            <Col className=\"\" xs={12} md={12} lg={5}>\r\n              <h2>About us</h2>\r\n              <p>\r\n                <del>We are 2 junior web developers doing a project--</del> We\r\n                love plants, and wanted to make accessible to the whole\r\n                community.\r\n              </p>\r\n            </Col>\r\n\r\n            <Col xs={false} md={false} lg={1} />\r\n          </Row>\r\n        </Container>\r\n      </>\r\n    );\r\n}\r\n\r\nexport default Home\r\n","import React, { useState } from \"react\";\r\nimport { Container, Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport AuthService from \"../../../services/auth.service\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../../../App.css\";\r\n\r\nconst Login = (props) => {\r\n  const [username, setUsername] = useState(\"\")\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setErrorLogin] = useState(\"\")\r\n\r\n\r\n  const authService = new AuthService();\r\n  \r\n  const handleInput = (e) => {\r\n    const { name, value } = e.target;\r\n    name === 'username' ? setUsername(value) : setPassword(value)\r\n  };\r\n  \r\n  const handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    authService\r\n      .login(username, password)\r\n      .then((res) => {\r\n        props.storeUser(res.data);\r\n        props.history.push(\"/\");\r\n      })\r\n      .catch((err) => {\r\n        setErrorLogin(err.response.data.message)\r\n        setTimeout(() => setErrorLogin(undefined),2500)\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"mt-3 d-flex justify-content-center\">\r\n        <Col xs={8} sm={8} lg={6}>\r\n          <Form className=\"container\" onSubmit={handleFormSubmit}>\r\n            <Form.Group className=\"mb-3\" controlId=\"username\">\r\n              <Form.Label>Username</Form.Label>\r\n              <Form.Control\r\n                className=\"rounded-pill\"\r\n                name=\"username\"\r\n                value={username}\r\n                onChange={(e) => handleInput(e)}\r\n                type=\"text\"\r\n                placeholder=\"Enter username\"\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"password\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                className=\"rounded-pill\"\r\n                name=\"password\"\r\n                value={password}\r\n                onChange={(e) => handleInput(e)}\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n              />\r\n            </Form.Group>\r\n            <div className=\"d-grid gap-2\">\r\n              <Button variant=\"success\" type=\"submit\" className=\"rounded-pill\">\r\n                Submit\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n\r\n          {error && <p id=\"errorMessage\">{error}</p>}\r\n\r\n          <p className=\"text-center mt-4\">\r\n            Not registered? <Link to={\"/register\"}>Sign up</Link>\r\n          </p>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import axios from 'axios'\r\n\r\nclass UploadService {\r\n\r\n    constructor(){\r\n\r\n        this.instance = axios.create({\r\n            baseURL: `${process.env.REACT_APP_API_URL}/uploads`,\r\n\r\n        })\r\n    }\r\n    uploadImg = (imageForm) => this.instance.post(\"/image\", imageForm)\r\n}\r\n\r\nexport default UploadService;","import AuthService from \"./../../../services/auth.service\";\r\nimport React, { useState } from \"react\";\r\nimport { Container, Form, Button, Spinner, Row, Col } from \"react-bootstrap\";\r\nimport UploadService from \"./../../../services/upload.service\";\r\nimport \"./Signup.css\"\r\nimport \"../../../App.css\"\r\nimport Autocomplete from \"react-google-autocomplete\";\r\n\r\nconst { formatSignDate } = require(\"../../../utils/index\");\r\n\r\nconst authService = new AuthService();\r\nconst uploadService = new UploadService();\r\n\r\nconst Signup = (props) => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [age, setAge] = useState(0);\r\n  const [role, setRole] = useState(\"\");\r\n  const [avatar, setAvatar] = useState(\r\n    \"https://res.cloudinary.com/dubhsyrde/image/upload/v1633536992/orl5czm2lgcz9a2fzkhu.svg\"\r\n  );\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setErrorLogin] = useState(\"\")\r\n\r\n\r\n  const clearState = () => {\r\n    setUsername(\"\");\r\n    setPassword(\"\");\r\n    setEmail(\"\");\r\n    setAddress(\"\");\r\n    setAge(0);\r\n    setRole(\"\");\r\n    setAvatar(\"\");\r\n  };\r\n\r\n  \r\n\r\n  const handleChange = (e) => {\r\n    let { value, name, type } = e.target;\r\n    type === \"radio\" && (value === \"true\" ? (value = true) : (value = false));\r\n\r\n    switch (name) {\r\n      case \"username\":\r\n        setUsername(value);\r\n        break;\r\n\r\n      case \"password\":\r\n        setPassword(value);\r\n        break;\r\n\r\n      case \"email\":\r\n        setEmail(value);\r\n        break;\r\n\r\n      case \"address\":\r\n        setAddress(value);\r\n        break;\r\n\r\n      case \"age\":\r\n        setAge(value);\r\n        break;\r\n\r\n      case \"role\":\r\n        setRole(value);\r\n        break;\r\n\r\n      case \"avatar\":\r\n        setAvatar(value);\r\n        break;\r\n\r\n      default:\r\n    }\r\n  };\r\n\r\n  const handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    let tmp = \"\";\r\n    role ? (tmp = \"Shop\") : (tmp = \"User\");\r\n\r\n    authService\r\n      .signup(username, password, email, address, age, tmp, avatar)\r\n      .then((user) => {\r\n        props.storeUser(user.data.user);\r\n        console.log(user)\r\n        props.history.push(\"/\");\r\n      })\r\n      .catch((err) =>{\r\n        setErrorLogin(err.response.data.message)\r\n        setTimeout(() => setErrorLogin(undefined),2500)\r\n        console.log(err)\r\n      });\r\n\r\n    clearState();\r\n  };\r\n\r\n  const handleFile = (e) => {\r\n    setIsLoading(true);\r\n\r\n    const uploadData = new FormData();\r\n    uploadData.append(\"imageData\", e.target.files[0]);\r\n\r\n    uploadService\r\n      .uploadImg(uploadData)\r\n      .then((res) => {\r\n        \r\n        setIsLoading(false);\r\n        setAvatar(res.data.cloudinary_url);\r\n      })\r\n      .catch((err) => alert(\"Error, image not uploaded\", err));\r\n  };\r\n\r\n  return (\r\n    <Container className=\"signup\">\r\n      <Row className=\"mt-3 d-flex justify-content-center\">\r\n        <Col xs={6} sm={8} lg={6}>\r\n          <Row>\r\n            <Form.Group className=\"mb-3 text-center\" controlId=\"avatar\">\r\n              <img className=\"signup__avatar rounded-circle\" alt=\"default avatar\" src={avatar} />\r\n              <Form.Label className=\"btn btn-outline-success rounded-pill\">\r\n                Change picture\r\n              </Form.Label>\r\n\r\n              <Form.Control\r\n                className=\"form-control-hide\"\r\n                name=\"avatar\"\r\n                onChange={(e) => handleFile(e)}\r\n                type=\"file\"\r\n              />\r\n            </Form.Group>\r\n          </Row>\r\n\r\n          <Form onSubmit={handleFormSubmit}>\r\n            <Form.Group className=\"mb-3\" controlId=\"username\">\r\n              <Form.Label>Username*</Form.Label>\r\n              <Form.Control\r\n                className=\"rounded-pill\"\r\n                name=\"username\"\r\n                value={username}\r\n                onChange={(e) => handleChange(e)}\r\n                type=\"text\"\r\n                placeholder=\"Enter username\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"password\">\r\n              <Form.Label>Password*</Form.Label>\r\n              <Form.Control\r\n                className=\"rounded-pill\"\r\n                name=\"password\"\r\n                value={password}\r\n                onChange={(e) => handleChange(e)}\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"email\">\r\n              <Form.Label>Email*</Form.Label>\r\n              <Form.Control\r\n                className=\"rounded-pill\"\r\n                name=\"email\"\r\n                value={email}\r\n                onChange={(e) => handleChange(e)}\r\n                type=\"email\"\r\n                placeholder=\"Email\"\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"address\">\r\n              <Form.Label>Address*</Form.Label>\r\n              <Autocomplete\r\n                className=\"form-control rounded-pill\"\r\n                apiKey={process.env.REACT_APP_API_KEY_MAPS}\r\n                language=\"en\"\r\n                options={{\r\n                  types: [\"address\"],\r\n                  fields: [\"(formatted_address)\"],\r\n                  componentRestrictions: { country: \"es\" },\r\n                }}\r\n                onChange={(e) => handleChange(e)\r\n                }\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"age\">\r\n              <Form.Label>Date of Birth*</Form.Label>\r\n              <Form.Control\r\n                className=\"rounded-pill\"\r\n                name=\"age\"\r\n                value={age}\r\n                max={formatSignDate()}\r\n                onChange={(e) => handleChange(e)}\r\n                type=\"date\"\r\n                placeholder=\"Age\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"role\">\r\n              <Form.Label>Are you a company?</Form.Label>\r\n              <div key={`inline-radio`}>\r\n                <Form.Check\r\n                  inline\r\n                  label=\"Yes\"\r\n                  name=\"role\"\r\n                  type=\"radio\"\r\n                  id={`inline-radio-1`}\r\n                  value={true}\r\n                  onChange={(e) => handleChange(e)}\r\n                />\r\n                <Form.Check\r\n                  className=\"success\"\r\n                  defaultChecked\r\n                  inline\r\n                  label=\"No\"\r\n                  name=\"role\"\r\n                  type=\"radio\"\r\n                  id={`inline-radio-2`}\r\n                  value={false}\r\n                  onChange={(e) => handleChange(e)}\r\n                />\r\n              </div>\r\n            </Form.Group>\r\n\r\n            <Row className=\"justify-content-center mt-2 mb-2\">\r\n              {isLoading && <Spinner animation=\"border\" variant=\"success\" />}\r\n            </Row>\r\n\r\n            <div className=\"d-grid gap-2\">\r\n              <Button\r\n                className=\"rounded-pill\"\r\n                disabled={isLoading}\r\n                variant=\"success\"\r\n                type=\"submit\"\r\n              >\r\n                {isLoading ? \"Loading...\" : \"Submit\"}\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n      {error && <p id=\"errorMessage\">{error}</p>}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import { Col, Container, Row } from \"react-bootstrap\";\r\nimport \"./Profile.css\"\r\n\r\n\r\nconst Profile = ({ loggedUser }) => {\r\n\r\n  return (\r\n    <>\r\n      {loggedUser ? (\r\n        <Container className=\"profile\">\r\n          <Row className=\"d-flex justify-content-center\">\r\n            <Col className=\"profile__col\" xs={10} sm={8} lg={6}>\r\n              <h1 className=\"text-center\">{loggedUser.username}</h1>\r\n              <p className=\"text-center\">{loggedUser.role}</p>\r\n              <div className=\"text-center\">\r\n                <img\r\n                  className=\"rounded-circle center-block\"\r\n                  alt={`${loggedUser.username}'s avatar`}\r\n                  src={loggedUser.avatar}\r\n                />\r\n              </div>\r\n\r\n              <p >{loggedUser.email}</p>\r\n              <p className=\"text-center\">{loggedUser.address}</p>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      ) : (\r\n        <p>Loading...</p>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React, { useState } from \"react\";\r\nimport { Button, Form, Spinner } from \"react-bootstrap\";\r\nimport PlantService from \"../../../services/plant.service\";\r\nimport UploadService from \"../../../services/upload.service\";\r\nimport \"../../../App.css\"\r\n\r\nconst plantService = new PlantService();\r\nconst uploadService = new UploadService();\r\n\r\nconst PlantForm = (props) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n  const [size, setSize] = useState(\"\");\r\n  const [type, setType] = useState(\"\");\r\n  const [toxic, setToxic] = useState(false);\r\n  const [location, setLocation] = useState([]);\r\n  const [temperature, setTemperature] = useState(0);\r\n  const [watering, setWatering] = useState(\"\");\r\n  const [price, setPrice] = useState(0);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(\"\")\r\n\r\n\r\n  const clearState = () => {\r\n    setName(\"\");\r\n    setImage(\"\");\r\n    setSize(\"\");\r\n    setType(\"\");\r\n    setToxic(false);\r\n    setLocation([]);\r\n    setTemperature(0);\r\n    setWatering(\"\");\r\n    setPrice(0);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    let { value, name, type } = e.target;\r\n\r\n    let newValue = [...location];\r\n    if (name === \"location\" && e.target.checked) {\r\n      newValue.push(value);\r\n    }\r\n    if (name === \"location\" && !e.target.checked) {\r\n      newValue.splice(newValue.indexOf(value), 1);\r\n    }\r\n\r\n    type === \"radio\" && (value === \"true\" ? (value = true) : (value = false));\r\n\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n      case \"avatar\":\r\n        setImage(value);\r\n        break;\r\n      case \"size\":\r\n        setSize(value);\r\n        break;\r\n      case \"type\":\r\n        setType(value);\r\n        break;\r\n      case \"toxic\":\r\n        setToxic(value);\r\n        break;\r\n      case \"location\":\r\n        setLocation(newValue);\r\n        break;\r\n      case \"price\":\r\n        setPrice(value);\r\n        break;\r\n      case \"temperature\":\r\n        setTemperature(value);\r\n        break;\r\n      case \"watering\":\r\n        setWatering(value);\r\n        break;\r\n      default:\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    plantService\r\n      .createPlant({\r\n        name,\r\n        image,\r\n        description: { size, type, toxic, location, temperature, watering },\r\n        sellerId: props.loggedUser,\r\n        price,\r\n      })\r\n      .then(() => {\r\n        clearState();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n        setError(err.response.data.message)\r\n        setTimeout(() => setError(undefined),2500)\r\n      });\r\n  };\r\n\r\n  const handleFile = (e) => {\r\n    setIsLoading(true);\r\n\r\n    const uploadData = new FormData();\r\n    uploadData.append(\"imageData\", e.target.files[0]);\r\n\r\n    uploadService\r\n      .uploadImg(uploadData)\r\n      .then((res) => {\r\n        setIsLoading(false);\r\n        setImage(res.data.cloudinary_url);\r\n      })\r\n      .catch((err) => alert(\"Error, image not uploaded \"));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1 className=\"text-center mt-2 mb-3\">Sell a plant</h1>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group className=\"mb-3\" controlId=\"name\">\r\n          <Form.Label>Name*: </Form.Label>\r\n          <Form.Control\r\n            onChange={(e) => handleChange(e)}\r\n            name=\"name\"\r\n            value={name}\r\n            type=\"text\"\r\n            placeholder=\"Plant's name\"\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-3\" controlId=\"image\">\r\n          <Form.Label>Image*: </Form.Label>\r\n          <Form.Control\r\n            onChange={(e) => handleFile(e)}\r\n            name=\"image\"\r\n            type=\"file\"\r\n            placeholder=\"Plant's image\"\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-3\" controlId=\"size\">\r\n          <Form.Label>Size*: </Form.Label>\r\n          <Form.Control\r\n            onChange={(e) => handleChange(e)}\r\n            name=\"size\"\r\n            value={size}\r\n            type=\"text\"\r\n            placeholder=\"Plant's sizes\"\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-3\" controlId=\"type\">\r\n          <Form.Label>Type*: </Form.Label>\r\n          <Form.Control\r\n            onChange={(e) => handleChange(e)}\r\n            name=\"type\"\r\n            value={type}\r\n            type=\"text\"\r\n            placeholder=\"Plant's type\"\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-3\" controlId=\"toxic\">\r\n          <Form.Label>Is it toxic for animals?*</Form.Label>\r\n          {[\"radio\"].map((type) => (\r\n            <div key={`inline-${type}`}>\r\n              <Form.Check\r\n                inline\r\n                label=\"Yes\"\r\n                name=\"toxic\"\r\n                type=\"radio\"\r\n                id={`inline-${type}-1`}\r\n                value={true}\r\n                onChange={(e) => handleChange(e)}\r\n              />\r\n              <Form.Check\r\n                inline\r\n                label=\"No\"\r\n                name=\"toxic\"\r\n                type=\"radio\"\r\n                id={`inline-${type}-2`}\r\n                value={false}\r\n                onChange={(e) => handleChange(e)}\r\n              />\r\n            </div>\r\n          ))}\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-3\" controlId=\"location\">\r\n          <Form.Label>Location?*</Form.Label>\r\n          {[\"checkbox\"].map((type) => (\r\n            <div key={`inline-${type}`} className=\"mb-3\">\r\n              <Form.Check\r\n                inline\r\n                label=\"Indoors\"\r\n                name=\"location\"\r\n                type={type}\r\n                id={`inline-${type}-1`}\r\n                onChange={(e) => handleChange(e)}\r\n                value=\"Indoors\"\r\n              />\r\n              <Form.Check\r\n                inline\r\n                label=\"Outdoors\"\r\n                name=\"location\"\r\n                type={type}\r\n                id={`inline-${type}-2`}\r\n                onChange={(e) => handleChange(e)}\r\n                value=\"Outdoors\"\r\n              />\r\n            </div>\r\n          ))}\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-3\" controlId=\"temperature\">\r\n          <Form.Label>Temperature*: </Form.Label>\r\n          <Form.Control\r\n            onChange={(e) => handleChange(e)}\r\n            name=\"temperature\"\r\n            value={temperature}\r\n            type=\"number\"\r\n            placeholder=\"Temperature\"\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-3\" controlId=\"watering\">\r\n          <Form.Label>Watering*: </Form.Label>\r\n          <Form.Control\r\n            onChange={(e) => handleChange(e)}\r\n            name=\"watering\"\r\n            value={watering}\r\n            type=\"text\"\r\n            placeholder=\"Watering\"\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-3\" controlId=\"price\">\r\n          <Form.Label>Price*: </Form.Label>\r\n          <Form.Control\r\n            onChange={(e) => handleChange(e)}\r\n            name=\"price\"\r\n            value={price}\r\n            type=\"number\"\r\n            placeholder=\"Price\"\r\n          />\r\n          €\r\n        </Form.Group>\r\n\r\n        {isLoading && <Spinner animtion=\"border\" variant=\"success\" />}\r\n        {error && <p id=\"errorMessage\">{error}</p>}\r\n        <Button disabled={isLoading} variant=\"primary\" type=\"submit\">\r\n          {isLoading ? \"Loading...\" : \"Submit\"}\r\n        </Button>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PlantForm;\r\n","import axios from \"axios\";\r\n\r\nclass CommentService {\r\n  constructor() {\r\n    this.instance = axios.create({\r\n      baseURL: `${process.env.REACT_APP_API_URL}/comment`,\r\n      withCredentials: true,\r\n    });\r\n  }\r\n\r\n  getComments = () => this.instance.get(\"/\");\r\n  getComment = (id) => this.instance.get(`/${id}`);\r\n  deleteComment = (id) => this.instance.delete(`/${id}`);\r\n  createComment = (comment) => this.instance.post(\"/\", comment);\r\n}\r\n\r\nexport default CommentService;\r\n","import React, { useState } from \"react\";\r\nimport CommentService from \"../../../services/comment.service\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport { FaStar } from \"react-icons/fa\"\r\nimport \"./CommentForm.css\"\r\n\r\nconst commentService = new CommentService();\r\n\r\nconst CommentForm = (props) => {\r\n    const [content, setContent] = useState(\"\")\r\n    const [rating, setRating] = useState(null)\r\n    const [hover, setHover] = useState(null)\r\n\r\n    const clearState = () => {\r\n        setContent(\"\")\r\n        setRating(0)\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        const {value, name} = e.target;\r\n\r\n        switch (name) {\r\n            case \"content\":\r\n                setContent(value);\r\n                break;\r\n            case \"rating\":\r\n                setRating(value);\r\n                break;\r\n            default:\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const authorId = props.loggedUser;\r\n\r\n        commentService\r\n            .createComment({ content, rating, authorId })\r\n            .then(() => {\r\n                clearState()\r\n            })\r\n            .catch((err) => console.log(err, 'jgfkjhgkjghj'))\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Form onSubmit={handleSubmit}>\r\n          <h1>Review this seller </h1>\r\n          {[...Array(5)].map((star, idx) => {\r\n            const ratingValue = idx + 1;\r\n\r\n            return (\r\n              <label key={idx}>\r\n                <input\r\n                  id=\"starRadio\"\r\n                  type=\"radio\"\r\n                  name=\"rating\"\r\n                  value={ratingValue}\r\n                  onClick={(e) => handleChange(e)}\r\n                />\r\n                <FaStar\r\n                  className=\"star\"\r\n                  color={\r\n                    ratingValue <= (hover || rating) ? \"#ffc107\" : \"#e4e5e9\"\r\n                  }\r\n                  size={30}\r\n                  onMouseEnter={() => setHover(ratingValue)}\r\n                  onMouseLeave={() => setHover(null)}\r\n                />\r\n              </label>\r\n            );\r\n          })}\r\n\r\n          <Form.Group className=\"mb-3\" controlId=\"content\">\r\n            <Form.Label>Additional comment:</Form.Label>\r\n            <Form.Control\r\n              onChange={(e) => handleChange(e)}\r\n              name=\"content\"\r\n              value={content}\r\n              type=\"text\"\r\n              placeholder=\"Your comment goes here\"\r\n            />\r\n          </Form.Group>\r\n\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n      </>\r\n    );\r\n}\r\n\r\nexport default CommentForm","import PlantService from \"../../../../services/plant.service\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nconst RemoveItem = ({ id }, props) => {\r\n  const plantService = new PlantService();\r\n\r\n  const removePlant = (id) => {\r\n    plantService\r\n      .deletePlant(id)\r\n      .then((res) => {\r\n        props.history.push(\"/\");\r\n      })\r\n      .catch((err) => console.log(\"error on delete your plant\", err));\r\n  };\r\n\r\n  return (\r\n    <Button onClick={(id) => removePlant(id)} variant=\"primary\" type=\"button\">\r\n      Delete a plant\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default RemoveItem;\r\n","import React, { useEffect, useState } from \"react\"\r\nimport { Button, Form, Spinner } from \"react-bootstrap\"\r\nimport PlantService from \"../../../../services/plant.service\";\r\nimport UploadService from \"../../../../services/upload.service\";\r\n\r\nconst plantService = new PlantService();\r\nconst uploadService = new UploadService();\r\n\r\nconst EditPlant = (props, loggedUser) => {\r\n    \r\n        const { id } = props.match.params\r\n\r\n        const [name, setName] = useState(\"\");\r\n        const [image, setImage] = useState(\"\");\r\n        const [size, setSize] = useState(\"\");\r\n        const [type, setType] = useState(\"\");\r\n        const [toxic, setToxic] = useState(false);\r\n        const [location, setLocation] = useState([]);\r\n        const [temperature, setTemperature] = useState(0);\r\n        const [watering, setWatering] = useState(\"\");\r\n        const [price, setPrice] = useState(0);\r\n        const [isLoading, setIsLoading] = useState(false);\r\n    \r\n    \r\n    const findPlant = (id) => {\r\n\r\n        plantService\r\n            .getPlant(id)\r\n            .then(plant => {\r\n\r\n                setName(plant.data.plant.name);\r\n                setImage(plant.data.plant.image);\r\n                setSize(plant.data.plant.description.size);\r\n                setType(plant.data.plant.description.type);\r\n                setToxic(plant.data.plant.description.toxic);\r\n                setLocation(plant.data.plant.description.location);\r\n                setTemperature(plant.data.plant.description.temperature);\r\n                setWatering(plant.data.plant.description.watering);\r\n                setPrice(plant.data.plant.price);\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n        useEffect(() => {\r\n            findPlant(id)\r\n\r\n        }, [id]) //remove id if giving problems (reacthooksfix)\r\n            \r\n              \r\n        const clearState = () => {\r\n            setName(\"\");\r\n            setImage(\"\");\r\n            setSize(\"\");\r\n            setType(\"\");\r\n            setToxic(false);\r\n            setLocation([]);\r\n            setTemperature(0);\r\n            setWatering(\"\");\r\n            setPrice(0);\r\n        };\r\n\r\n\r\n        const handleChange = (e) => {\r\n            let { value, name, type } = e.target;\r\n        \r\n            let newValue = [...location];\r\n            if (name === \"location\" && e.target.checked) {\r\n                newValue.push(value);\r\n            }\r\n            if (name === \"location\" && !e.target.checked) {\r\n                newValue.splice(newValue.indexOf(value), 1);\r\n            }\r\n        \r\n            type === \"radio\" && (value === \"true\" ? (value = true) : (value = false));\r\n        \r\n            switch (name) {\r\n                case \"name\":\r\n                setName(value);\r\n                break;\r\n                case \"avatar\":\r\n                setImage(value);\r\n                break;\r\n                case \"size\":\r\n                setSize(value);\r\n                break;\r\n                case \"type\":\r\n                setType(value);\r\n                break;\r\n                case \"toxic\":\r\n                setToxic(value);\r\n                break;\r\n                case \"location\":\r\n                setLocation(newValue);\r\n                break;\r\n                case \"price\":\r\n                setPrice(value);\r\n                break;\r\n                case \"temperature\":\r\n                setTemperature(value);\r\n                break;\r\n                case \"watering\":\r\n                setWatering(value);\r\n                break;\r\n                default:\r\n            }\r\n        };\r\n\r\n            const handleSubmitUpdate = (e) => {\r\n            e.preventDefault();\r\n            console.log({\r\n                name,\r\n                image,\r\n                description: { size, type, toxic, location, temperature, watering },\r\n                sellerId: props.loggedUser._id,\r\n                price,\r\n            })\r\n            plantService\r\n                .editPlant(id, {\r\n                    name,\r\n                    image,\r\n                    description: { size, type, toxic, location, temperature, watering },\r\n                    sellerId: props.loggedUser._id,\r\n                    price,\r\n                })\r\n                .then((res) => {\r\n                clearState();\r\n                })\r\n                .catch((err) => console.error(err));\r\n            };\r\n\r\n\r\n            const handleFile = (e) => {\r\n            setIsLoading(true);\r\n        \r\n            const uploadData = new FormData();\r\n            uploadData.append(\"imageData\", e.target.files[0]);\r\n        \r\n            uploadService\r\n                .uploadImg(uploadData)\r\n                .then((res) => {\r\n                    setIsLoading(false);\r\n                    setImage(res.data.cloudinary_url);\r\n                })\r\n                .catch((err) => alert(\"Error, image not uploaded \"));\r\n            };\r\n            \r\n\r\n\r\n\r\n           \r\n\r\n    return(\r\n<>\r\n      <h1 className=\"text-center mt-2 mb-3\">Edit your plant</h1>\r\n      <Form onSubmit={handleSubmitUpdate}>\r\n        <Form.Group className=\"mb-3\" controlId=\"name\">\r\n          <Form.Label>Name*: </Form.Label>\r\n          <Form.Control\r\n            onChange={(e) => handleChange(e)}\r\n            name=\"name\"\r\n            value={name}\r\n            type=\"text\"\r\n            placeholder=\"Plant's name\"\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-3\" controlId=\"image\">\r\n          <Form.Label>Image*: </Form.Label>\r\n          <Form.Control\r\n            onChange={(e) => handleFile(e)}\r\n            name=\"image\"\r\n            type=\"file\"\r\n            placeholder=\"Plant's image\"\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-3\" controlId=\"size\">\r\n          <Form.Label>Size*: </Form.Label>\r\n          <Form.Control\r\n            onChange={(e) => handleChange(e)}\r\n            name=\"size\"\r\n            value={size}\r\n            type=\"text\"\r\n            placeholder=\"Plant's sizes\"\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-3\" controlId=\"type\">\r\n          <Form.Label>Type*: </Form.Label>\r\n          <Form.Control\r\n            onChange={(e) => handleChange(e)}\r\n            name=\"type\"\r\n            value={type}\r\n            type=\"text\"\r\n            placeholder=\"Plant's type\"\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-3\" controlId=\"toxic\">\r\n          <Form.Label>Is it toxic for animals?*</Form.Label>\r\n          {[\"radio\"].map((type) => (\r\n            <div key={`inline-${type}`}>\r\n              <Form.Check\r\n                inline\r\n                label=\"Yes\"\r\n                name=\"toxic\"\r\n                type=\"radio\"\r\n                id={`inline-${type}-1`}\r\n                value={true}\r\n                onChange={(e) => handleChange(e)}\r\n              />\r\n              <Form.Check\r\n                inline\r\n                label=\"No\"\r\n                name=\"toxic\"\r\n                type=\"radio\"\r\n                id={`inline-${type}-2`}\r\n                value={false}\r\n                onChange={(e) => handleChange(e)}\r\n              />\r\n            </div>\r\n          ))}\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-3\" controlId=\"location\">\r\n          <Form.Label>Location?*</Form.Label>\r\n          {[\"checkbox\"].map((type) => (\r\n            <div key={`inline-${type}`} className=\"mb-3\">\r\n              <Form.Check\r\n                inline\r\n                label=\"Indoors\"\r\n                name=\"location\"\r\n                type={type}\r\n                id={`inline-${type}-1`}\r\n                onChange={(e) => handleChange(e)}\r\n                value=\"Indoors\"\r\n              />\r\n              <Form.Check\r\n                inline\r\n                label=\"Outdoors\"\r\n                name=\"location\"\r\n                type={type}\r\n                id={`inline-${type}-2`}\r\n                onChange={(e) => handleChange(e)}\r\n                value=\"Outdoors\"\r\n              />\r\n            </div>\r\n          ))}\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-3\" controlId=\"temperature\">\r\n          <Form.Label>Temperature*: </Form.Label>\r\n          <Form.Control\r\n            onChange={(e) => handleChange(e)}\r\n            name=\"temperature\"\r\n            value={temperature}\r\n            type=\"number\"\r\n            placeholder=\"Temperature\"\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-3\" controlId=\"watering\">\r\n          <Form.Label>Watering*: </Form.Label>\r\n          <Form.Control\r\n            onChange={(e) => handleChange(e)}\r\n            name=\"watering\"\r\n            value={watering}\r\n            type=\"text\"\r\n            placeholder=\"Watering\"\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-3\" controlId=\"price\">\r\n          <Form.Label>Price*: </Form.Label>\r\n          <Form.Control\r\n            onChange={(e) => handleChange(e)}\r\n            name=\"price\"\r\n            value={price}\r\n            type=\"number\"\r\n            placeholder=\"Price\"\r\n          />\r\n          €\r\n        </Form.Group>\r\n\r\n        {isLoading && <Spinner animtion=\"border\" variant=\"success\" />}\r\n\r\n        <Button disabled={isLoading} variant=\"primary\" type=\"submit\">\r\n          {isLoading ? \"Loading...\" : \"Submit\"}\r\n        </Button>\r\n      </Form>\r\n    </>\r\n  );\r\n\r\n}\r\n\r\nexport default EditPlant","import axios from \"axios\";\r\n\r\nclass MessageService {\r\n  constructor() {\r\n    this.instance = axios.create({\r\n      baseURL: `${process.env.REACT_APP_API_URL}/message`,\r\n      withCredentials: true,\r\n    });\r\n  }\r\n\r\n  getMessages = () => this.instance.get(\"/\");\r\n  getMessage = (id) => this.instance.get(`/${id}`);\r\n  createMessage = (message) => this.instance.post(\"/\", message);\r\n  deleteMessage = (id) => this.instance.delete(`/${id}`);\r\n}\r\n\r\nexport default MessageService;\r\n","import axios from \"axios\";\r\n\r\nclass UserService {\r\n  constructor() {\r\n    this.instance = axios.create({\r\n      baseURL: `${process.env.REACT_APP_API_URL}/user`,\r\n      withCredentials: true,\r\n    });\r\n  }\r\n\r\n  getUsers = () => this.instance.get(\"/\");\r\n  getUser = (username) => this.instance.get(`/${username}`);\r\n  editUser = (id, plant) => this.instance.put(`/${id}`, plant);\r\n  createUser = (user) => this.instance.post(\"/\", user);\r\n  deleteUSer = (id) => this.instance.delete(`/${id}`);\r\n}\r\n\r\nexport default UserService;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport MessageService from \"../../../services/message.service\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport UserService from \"../../../services/user.service\"\r\nimport \"../../../App.css\"\r\n\r\n\r\nconst messageService = new MessageService();\r\n\r\nconst SendMessage = ({seller, loggedUser}) => {\r\n\r\n\r\n  const [subject, setSubject] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\")\r\n  const [address, setAddress] = useState(\"\")\r\n  const [avatar, setAvatar] = useState(\"\")\r\n  const [plantSellerId, setPlantSellerId] = useState(undefined)\r\n  const [error, setError] = useState(\"\")\r\n  const [success, setSuccess] = useState(\"\")\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const getOneUser = (seller) => {\r\n\r\n      setUsername(seller?.username)\r\n      setAddress(seller?.address)\r\n      setAvatar(seller?.avatar)\r\n      setPlantSellerId(seller?._id)\r\n\r\n    }\r\n\r\n    getOneUser(seller)\r\n  }, [seller])\r\n\r\n  useEffect(() => {\r\n    setUsername(seller?.username)\r\n    setAddress(seller?.address)\r\n    setAvatar(seller?.avatar)\r\n    setPlantSellerId(seller?._id)\r\n    \r\n  }, [seller, loggedUser])\r\n\r\n  const clearState = () => {\r\n    setSubject(\"\");\r\n    setContent(\"\");\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { value, name } = e.target;\r\n\r\n    switch (name) {\r\n      case \"content\":\r\n        setContent(value);\r\n        break;\r\n      case \"subject\":\r\n        setSubject(value);\r\n        break;\r\n      default:\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const authorId = loggedUser._id;\r\n    const receiverId = plantSellerId\r\n    messageService\r\n      .createMessage({ content, subject, authorId, receiverId })\r\n      .then((res) => {\r\n        clearState();\r\n        //setTimeout(() => setSuccess(undefined),2500)\r\n      })\r\n      .catch((err) => {\r\n       // setTimeout(() => setError(undefined),2500)\r\n        console.log(err)\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form onSubmit={handleSubmit}>\r\n        <img src={avatar} alt=\"User \" />\r\n        <h1>Send a message to {username} </h1>\r\n        <h2>Address: {address}</h2>\r\n        <Form.Group className=\"mb-3\" controlId=\"subject\">\r\n          <Form.Label>Subject:* </Form.Label>\r\n\r\n          <Form.Control\r\n            onChange={(e) => handleChange(e)}\r\n            name=\"subject\"\r\n            value={subject}\r\n            type=\"text\"\r\n            placeholder=\"Subject\"\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-3\" controlId=\"content\">\r\n          <Form.Label>Message:* </Form.Label>\r\n          <Form.Control\r\n            onChange={(e) => handleChange(e)}\r\n            name=\"content\"\r\n            value={content}\r\n            type=\"text\"\r\n            placeholder=\"Type here your message\"\r\n          />\r\n        </Form.Group>\r\n\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n        {error && <p id=\"errorMessage\">{error}</p>}\r\n        {success && <p id=\"successMessage\">{success}</p>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SendMessage;\r\n","import { useState } from \"react\"\r\nimport { Button, Container, Modal, Row, Spinner } from \"react-bootstrap\"\r\nimport SendMessage from \"../../SendMessage/SendMessage\"\r\n\r\n\r\n\r\n\r\nconst MessageForm = (props) => {\r\n\r\n\r\n  const { seller } = props\r\n  const { loggedUser } = props\r\n  \r\n    const [showForm,setShowForm] = useState(false)\r\n    // const [message, setMessage] = useState(\"\")\r\n\r\n    const openModal = () => {\r\n\r\n        setShowForm(true)\r\n\r\n    }\r\n\r\n    const closeModal = () => {\r\n\r\n        setShowForm(false)\r\n\r\n    }\r\n\r\n    // const handleChange = (e) => {\r\n\r\n    //     const { value } = e.target\r\n\r\n    //     setMessage(value)\r\n\r\n    // } \r\n\r\n    return(\r\n\r\n        <Container>\r\n        <Button block className=\"mt-2\" onClick={() => openModal()}>Go ahead and send a message</Button>\r\n\r\n        <Modal show={showForm} onHide={() => closeModal()}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>What would you like to say?</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <SendMessage loggedUser={loggedUser} seller={seller}  closeModal={() => closeModal()} />\r\n          </Modal.Body>\r\n        </Modal>\r\n        <Row className=\"mt-4\">\r\n          {\r\n            //this.displayCoasters()\r\n          }\r\n        </Row>\r\n      </Container>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default MessageForm","import { useEffect, useState } from \"react\"\r\nimport PlantService from \"../../../services/plant.service\"\r\nimport { Card, Container, ListGroup, ListGroupItem } from \"react-bootstrap\"\r\nimport RemoveItem from \"./RemoveItem/RemoveItem\"\r\nimport { Link } from \"react-router-dom\"\r\nimport EditPlant from \"./Editplant/Editplant\"\r\nimport MessageForm from \"./MessageForm/MessageForm\"\r\nconst { formatDate } = require(\"../../../utils/index\")\r\n\r\n\r\nconst PlantDetails = (props) => {\r\n  const plantService = new PlantService();\r\n  const [plantsDetails, setPlantsDetails] = useState(undefined);\r\n  const { id } = props.match.params;\r\n  // const user = plantsDetails.sellerId\r\n  const [user, setUser] = useState({})\r\n  \r\n\r\n  const getOnePlant = (id) => {\r\n    plantService\r\n      .getPlant(id)\r\n      .then((plant) => {\r\n        return setPlantsDetails(plant.data.plant);\r\n      })\r\n      .then(() => setUser(plantsDetails?.sellerId))\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  useEffect(() => {\r\n     getOnePlant(id);\r\n  }, []); \r\n\r\n  useEffect(() => {\r\n    plantsDetails || getOnePlant(id);\r\n  }, [props]);\r\n\r\n  return (\r\n    <>\r\n      {plantsDetails ? (\r\n        <div>\r\n          <Card style={{ width: \"18rem\" }}>\r\n            <Card.Img variant=\"top\" src={plantsDetails.image} />\r\n            <Card.Body>\r\n              <Card.Title>{plantsDetails.name}</Card.Title>\r\n              <Card.Text>\r\n                Some quick example text to build on the card title and make up\r\n                the bulk of the card's content.\r\n              </Card.Text>\r\n            </Card.Body>\r\n            <ListGroup className=\"list-group-flush\">\r\n              <ListGroupItem>Price:{plantsDetails.price}</ListGroupItem>\r\n              <ListGroupItem>\r\n                Size: {plantsDetails.description.size}\r\n              </ListGroupItem>\r\n              <ListGroupItem>\r\n                Type: {plantsDetails.description.type}\r\n              </ListGroupItem>\r\n              <ListGroupItem>\r\n                Toxic: {plantsDetails.description.toxic}\r\n              </ListGroupItem>\r\n              <ListGroupItem>\r\n                Temperature: {plantsDetails.description.temperature}\r\n              </ListGroupItem>\r\n              <ListGroupItem>\r\n                Watering: {plantsDetails.description.watering}\r\n              </ListGroupItem>\r\n\r\n              <div>\r\n                <>\r\n                  {props.loggedUser?.role === \"Admin\" && <RemoveItem id={id} {...props} />}\r\n                </>\r\n              </div>\r\n\r\n              <div>\r\n                <>\r\n                  {props.loggedUser?._id === plantsDetails.sellerId._id &&\r\n                   \r\n                   <Container>\r\n                        <RemoveItem sellerDetails={plantsDetails.sellerId} {...props} />\r\n                        <Link className=\"btn bg-success\" to={`/edit-plant/${id}`}>\r\n                            Edit plant\r\n                        </Link>\r\n                    </Container>}\r\n                </>\r\n              </div>\r\n\r\n                    {props.loggedUser ? (\r\n\r\n                      <h2> Hello {props.loggedUser.username} </h2>\r\n                    ) : (\r\n                      <div>\r\n                        <>\r\n                          <p><Link to=\"/login\">Login</Link> in order to see our seller</p>\r\n                        </>\r\n                      </div>\r\n                        )\r\n                    }\r\n              <>\r\n                {props.loggedUser && props.loggedUser?.username !== plantsDetails.sellerId.username &&\r\n                  <div>\r\n                    <hr />\r\n\r\n                    <Card.Img\r\n                      variant=\"top\"\r\n                      src={plantsDetails.sellerId?.avatar}\r\n                    />\r\n                    <ListGroupItem>\r\n                      <h3>Name: {plantsDetails.sellerId?.username}</h3>\r\n                    </ListGroupItem>\r\n                    <ListGroupItem>\r\n                      <h4>Role: {plantsDetails.sellerId?.role}</h4>\r\n                    </ListGroupItem>\r\n                    {/* <ListGroupItem>\r\n                      Plantb user since:{\" \"}\r\n                      {formatDate(plantsDetails.sellerId?.createdAt)}\r\n                    </ListGroupItem>\r\n                    <ListGroupItem>\r\n                      Address: {plantsDetails.sellerId?.address}\r\n                    </ListGroupItem>\r\n                    <ListGroupItem>\r\n                      Email: {plantsDetails.sellerId?.email}\r\n                    </ListGroupItem> */}\r\n                    <Card.Body>\r\n                    <MessageForm {...props} seller={plantsDetails.sellerId} />\r\n                    <Card.Link href=\"#\">Another Link</Card.Link>\r\n                  </Card.Body>\r\n                  </div>\r\n                }\r\n              </>\r\n            </ListGroup>         \r\n          </Card>\r\n        </div>\r\n      ) : (\r\n        <p>Loading...</p>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PlantDetails;\r\n","import axios from \"axios\";\r\n\r\nclass CartService {\r\n  constructor() {\r\n    this.instance = axios.create({\r\n      baseURL: `${process.env.REACT_APP_API_URL}/cart`,\r\n      withCredentials: true,\r\n    });\r\n  }\r\n\r\n  getCart = (id) => this.instance.get(`/${id}`);\r\n  createCart = (cart) => this.instance.post(\"/\", cart);\r\n  editCart = (data) => this.instance.put(`/${data.id}`,data);\r\n}\r\n\r\nexport default CartService;\r\n","import \"./PlantsList.css\"\r\nimport PlantService from \"../../../services/plant.service\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Col, Container, Form, Row } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaShoppingCart } from \"react-icons/fa\";\r\nimport UserService from \"../../../services/user.service\";\r\nimport CartService from \"../../../services/cart.service\";\r\n\r\n\r\nconst PlantsList = (props) => {\r\n  \r\n     const plantService = new PlantService();\r\n     const userService = new UserService();\r\n     const cartService = new CartService();\r\n\r\n     const [plantsList, setPlantsList] = useState([]);\r\n     const [user, setUser] = useState(\"\")\r\n\r\n     console.log(user)\r\n\r\n     useEffect(() => {\r\n        plantService\r\n            .getPlants()\r\n            .then((plants) => {\r\n                setPlantsList(plants.data)\r\n            })\r\n            .catch((err) => console.log(\"Error while trying to get plants list\", err))\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n\r\n      setUser(props.loggedUser)\r\n\r\n    }, [props.loggedUser])\r\n    \r\n    \r\n    const addToCart = (plant) => {\r\n      // userService\r\n      //       .getUser(user)\r\n      //       .then((users) => {\r\n      //         // console.log(user);\r\n      //         console.log(users)\r\n      //         })\r\n      //       \r\n\r\n      cartService\r\n          .editCart({id: user.cart, items: plant })\r\n          .then(res => {\r\n\r\n              console.log(\"esto es res\",res)\r\n\r\n          })\r\n          .catch((err) => console.log(err));\r\n\r\n      // plantService\r\n      //       .getPlant(plant)\r\n      //       .then(plant =>{\r\n\r\n      //         console.log(\"esto es plant\",plant.data.plant._id)\r\n\r\n      //       })\r\n      //       .catch(err => console.log(err))\r\n\r\n      \r\n\r\n    };\r\n\r\n    return (\r\n      <>\r\n        {plantsList ? (\r\n          <Container className=\"plantslist\">\r\n            <h1 className=\"text-center\">Latest plants</h1>\r\n            <Row>\r\n              {plantsList.map((plant) => {\r\n                return (\r\n                  <Col xs={12} sm={6} lg={4}>\r\n                    <div className=\"plantslist_imagecontainer\">\r\n                      <img alt=\"plant's pic\" src={plant.image} />\r\n                    </div>\r\n                    <p>{plant.name}</p>\r\n                    <p>{plant.price}€</p>\r\n                    <Row>\r\n                      <Col xs={12} sm={12} lg={6} className=\"d-flex justify-content-center\">\r\n                        <Link\r\n                          to={`/plant/${plant._id}`}\r\n                          className=\"btn btn-success rounded-pill\"\r\n                        >See details</Link>\r\n                      </Col>\r\n                      <Col className=\"d-flex justify-content-center\" xs={12} sm={12} lg={6} >\r\n                      <Link to={`/plants/${user}`}>\r\n                          <button onClick={() => addToCart(plant._id)} className=\"btn btn-outline-success rounded-pill\" type=\"submit\"><FaShoppingCart/> Add to cart</button>\r\n                      </Link>\r\n                      </Col>\r\n                    </Row>\r\n                    <hr className=\"mt-5 mb-5\" />\r\n                  </Col>\r\n                );\r\n              })}\r\n            </Row>\r\n          </Container>\r\n        ) : (\r\n          <p>Loading...</p>\r\n        )}\r\n      </>\r\n    );\r\n}\r\n\r\nexport default PlantsList","import './CartItem.css'\r\nimport { Link }  from 'react-router-dom'\r\n\r\nconst CartItem = (props) => {\r\n\r\n  const { userCart } = props\r\n  console.log(userCart)\r\n  \r\n    return (\r\n      <>\r\n     {/* {userCart?.items.map(el =>{\r\n       return(\r\n        <div className=\"cart\">\r\n        <div className=\"cartitem__image\"><img src={el.image} alt=\"User \" /></div>\r\n\r\n        <Link to={`/product/${111}`} className=\"cartitem__name\">\r\n          <p>{el.name}</p>\r\n        </Link>\r\n        <p className=\"cartitem__price\">Size: {el.description.size}</p>\r\n        <p className=\"cartitem__price\">Type: {el.description.type}</p>\r\n        <p className=\"cartitem__price\">temperature: {el.description.temperature}</p>\r\n        <p className=\"cartitem__price\">watering: {el.description.watering}</p>\r\n        \r\n        <select className=\"cartitem__select\">\r\n          <option value=\"1\"></option>\r\n          <option value=\"2\"></option>\r\n          <option value=\"3\"></option>\r\n          <option value=\"4\">4</option>\r\n        </select>\r\n\r\n        <button className=\"cartitem__deletebtn\">\r\n            <i className=\"fas fa-trash\"></i>\r\n        </button>\r\n      </div>\r\n       )\r\n     })} */}\r\n     </>\r\n    )\r\n}\r\n\r\nexport default CartItem\r\n","import './Cart.css'\r\nimport CartItem from './../CartItem/CartItem'\r\nimport CartService from \"../../../services/cart.service\"\r\nimport { useEffect, useState } from 'react'\r\n\r\nconst Cart = (props) => {\r\n\r\n  const cartService = new CartService() \r\n  const { cart } = props.loggedUser\r\n  const [userCart, setCart] = useState(undefined)\r\n\r\n  useEffect(() => {\r\n    cartService\r\n      .getCart(cart)\r\n      .then(cartFound =>{\r\n        setCart(cartFound.data)\r\n        console.log(cartFound.data)\r\n      })\r\n  }, [props])\r\n\r\n\r\n    return (\r\n\r\n          <div className=\"cart\">\r\n        <div className=\"cart__left\">\r\n          <h2>Shopping cart</h2>\r\n\r\n          <CartItem userCart={userCart} />\r\n        </div>\r\n        <div className=\"cart__right\">\r\n          <div className=\"cart__info\">\r\n            <p>Subtotal 0 items</p>\r\n            {/* <p>{userCart.items[0].price}</p> */}\r\n          </div>\r\n          <div>\r\n              <button>Proceed to checkout</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Cart\r\n\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { useEffect, useState } from \"react\"\r\nimport { Card, Container } from \"react-bootstrap\"\r\nimport MessageService from \"../../../../services/message.service\"\r\nimport MessageForm from \"../../PlantDetails/MessageForm/MessageForm\"\r\nconst { formatDate } = require(\"../../../../utils/index\")\r\n\r\n\r\nconst MessageList = (props) => {\r\n    const messageService = new MessageService()\r\n    const [ message, setMessage] = useState(null)\r\n    const { loggedUser } = props\r\n    const { id } = props.match.params  \r\n     \r\n    const getMessages = (id) => {\r\n        \r\n        messageService\r\n            .getMessages({authorId: id})\r\n            .then(messages => {\r\n                setMessage(messages?.data)\r\n            })\r\n            .catch(err => console.log(err))\r\n        }\r\n\r\n    useEffect(() => getMessages(), [getMessages, id])\r\n\r\n\r\n    return(\r\n        <>\r\n            {message?.map(el =>{\r\n            return(\r\n                \r\n                <Container>\r\n                {loggedUser._id === el.receiverId &&\r\n                \r\n                    <Card className=\"text-center\">\r\n                    \r\n                    <Card.Header><img src={el.authorId.avatar} width=\"40px\" alt=\"User \" />{ el.authorId.username }</Card.Header>\r\n                    <Card.Body>\r\n                        <Card.Title>{el.subject}</Card.Title>\r\n                        <Card.Text>\r\n                        {el.content}\r\n                        </Card.Text>\r\n                        <MessageForm {...props} seller={el.authorId} />\r\n                    </Card.Body>\r\n                    <Card.Footer className=\"text-muted\">{formatDate(el.createdAt)}</Card.Footer>\r\n                    </Card>                                \r\n                \r\n                }\r\n                </Container>                \r\n            )\r\n        })}\r\n        \r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default MessageList","import Home from \"./../pages/Home/Home\"\r\nimport Login from \"../pages/Login/Login\";\r\nimport SignUp from \"../pages/Signup/Signup\";\r\nimport Profile from \"./../pages/Profile/Profile\";\r\nimport PlantForm from \"../pages/PlantForm/PlantForm\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport CommentForm from \"../pages/CommentForm/CommentForm\";\r\nimport PlantDetails from \"../pages/PlantDetails/PlantDetails\";\r\nimport EditPlant from \"../pages/PlantDetails/Editplant/Editplant\";\r\nimport SendMessage from \"../pages/SendMessage/SendMessage\";\r\nimport PlantsList from \"../pages/PlantsList/PlantsList\";\r\nimport Cart from \"../pages/Cart/Cart\"\r\n\r\nimport MessageList from \"../pages/messages/MessageList/MessageList\";\r\n\r\nconst Routes = ({ storeUser, loggedUser }) => {\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/\" render={ (props) => <Home/> }/>\r\n      <Route exact path=\"/new-plant\" render={ (props) => loggedUser ? (<PlantForm { ...props } loggedUser={ loggedUser } />) : (<Redirect to=\"/login\" />)}/>\r\n      <Route exact path=\"/new-comment\" render={ (props) => loggedUser ? ( <CommentForm { ...props } loggedUser={ loggedUser } />) : (<Redirect to=\"/login\" />)}/>\r\n      <Route path=\"/new-message\" render={ (props) => loggedUser ? ( <SendMessage { ...props } loggedUser={ loggedUser } />) : (<Redirect to=\"/login\" />)}/>\r\n      <Route exact path=\"/register\" render={ (props) => <SignUp storeUser={ storeUser } { ...props } /> } />\r\n      <Route exact path=\"/login\" render={ (props) => <Login storeUser={ storeUser } { ...props } /> } />\r\n      <Route exact path=\"/new-plant\" render={ (props) => <PlantForm { ...props } loggedUser={ loggedUser } /> } />\r\n      <Route path=\"/plant/:id\" render={ (props) => <PlantDetails { ...props } loggedUser={ loggedUser } /> } />\r\n      <Route exact path=\"/new-comment\" render={ (props) => <CommentForm { ...props } loggedUser={ loggedUser } /> } />\r\n      <Route exact path=\"/login\" render={ (props) => <Login storeUser={ storeUser } { ...props } /> } />\r\n      <Route path=\"/edit-plant/:id\" render={ (props) => <EditPlant { ...props } loggedUser={ loggedUser } /> } />\r\n      <Route path=\"/plants\" render={(props) => <PlantsList {...props} loggedUser={ loggedUser } /> }/>\r\n      <Route path=\"/plants/:username\" render={(props) => <PlantsList {...props} loggedUser={ loggedUser } /> }/>\r\n      <Route path=\"/cart\" render={(props) => <Cart {...props} loggedUser={ loggedUser }/>}/>\r\n      <Route path=\"/message-list/:id\" render={ (props) => <MessageList {...props} loggedUser={loggedUser}/>} />\r\n        \r\n      { loggedUser !== null ? (\r\n        <Route path={ `/${loggedUser.username}` } render={(props) => <Profile { ...props } loggedUser={ loggedUser } /> } />\r\n      ) \r\n      : \r\n      (\r\n        <Route path=\"/\" render={ () => <Redirect to=\"/login\" /> } />\r\n      )}\r\n\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import \"./App.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Navigation from \"./components/layout/Navigation/Navigation\";\r\nimport Routes from \"./components/routes\";\r\nimport AuthService from \"./services/auth.service\";\r\n\r\nconst authService = new AuthService();\r\n\r\nconst App = () => {\r\n  const [loggedUser, setLoggedUser] = useState(undefined);\r\n  const storeUser = (user) => setLoggedUser(user);\r\n\r\n  useEffect(() => {\r\n    const fetchUser = () => {\r\n      authService\r\n        .isloggedin()\r\n        .then((res) => storeUser(res.data))\r\n        .catch(() => storeUser(null));\r\n    };\r\n    fetchUser();\r\n  }, [loggedUser]);\r\n  \r\n  return (\r\n    <>\r\n      <Navigation loggedUser={loggedUser} storeUser={storeUser} />\r\n\r\n      {loggedUser !== undefined ? (\r\n        <Routes storeUser={storeUser} loggedUser={loggedUser} />\r\n      ) : (\r\n        <p>Loading...</p>\r\n      )}  \r\n      \r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nreportWebVitals();\r\n","module.exports = {\r\n        \r\n    \r\n    formatDate: date => {\r\n\r\n      let dateF = new Date(date)\r\n\r\n    let month = '' + (dateF.getMonth() + 1)\r\n    let day = '' + dateF.getDate()\r\n    let year = dateF.getFullYear()\r\n\r\n    if (month.length < 2) month = '0' + month;\r\n    if (day.length < 2) day = '0' + day;\r\n\r\n    return [year, month, day].join('-')\r\n  },\r\n\r\n\r\n  formatSignDate: date => {\r\n\r\n    var today = new Date();\r\n  \r\n    let month = '' + (today.getMonth() + 1)\r\n    let day = '' + today.getDate()\r\n    let year = today.getFullYear() - 18\r\n\r\n\r\n    if (month.length < 2) month = '0' + month;\r\n    if (day.length < 2) day = '0' + day;\r\n\r\n    return [year, month, day].join('-')\r\n  }\r\n\r\n}"],"sourceRoot":""}